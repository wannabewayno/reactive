{"version":3,"sources":["../../../src/components/tooltip/tooltip.jsx"],"names":["contains","root","n","node","parentNode","Tooltip","props","timerAutoHide","state","open","onFocus","bind","onBlur","onClick","onMouseDown","onMouseEnter","onMouseLeave","onTouchStart","onDocumentClick","focusTime","preClickTime","preTouchTime","isClickToHide","window","document","addEventListener","nextProps","undefined","setState","_setAutoHideTimer","clearTimeout","removeEventListener","e","fireEvents","Date","now","setOpen","preTime","Math","min","abs","preventDefault","isClickToShow","usePortal","target","tooltipRoot","querySelector","value","onClose","duration","autoHideDuration","setTimeout","type","children","callback","childCallback","event","childPros","action","indexOf","delayTimer","overlay","overlayColor","overlayOpacity","overlayZIndex","overlayProps","className","style","other","opacity","zIndex","content","arrow","placement","positionFixed","C","component","offset","openProp","color","preventOverflow","preventFlip","classNameTooltip","classNameTooltipContent","showDelay","flipBoundaryElement","newWrapperProps","Object","assign","newChildProps","createTwoChains","isMouseEnterToShow","onMouseOver","isMouseLeaveToHide","isFocusToShow","isBlurToHide","renderOverlay","React","cloneElement","Component","propTypes","PropTypes","element","isRequired","oneOf","bool","string","number","func","oneOfType","object","instanceOf","HTMLElement","defaultProps"],"mappings":"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","file":"tooltip.js","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport TooltipPopper from './tooltip_popper';\nimport Portal from '../../containers/portal';\n\n/**\n * Check if node is root element\n * @param {object} root\n * @param {object} n\n */\nfunction contains(root, n) {\n  let node = n;\n\n  while (node) {\n    if (node === root) {\n      return true;\n    }\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * Tooltip component\n */\nexport default class Tooltip extends Component {\n  static propTypes = {\n    /**\n     * Tooltip reference element.\n     */\n    children: PropTypes.element.isRequired,\n    /**\n     * This is what will be displayed inside the tooltip.\n     */\n    content: PropTypes.node.isRequired,\n    /**\n     * Which action cause tooltip shown.\n     */\n    action: PropTypes.oneOf([\n      'click',\n      'hover',\n      'focus',\n      'none',\n    ]),\n    /**\n     * If `true`, the tooltip arrow is shown.\n     */\n    arrow: PropTypes.bool,\n    /**\n     * Tooltip placement.\n     */\n    placement: PropTypes.oneOf([\n      'auto-start',\n      'auto',\n      'auto-end',\n      'top-start',\n      'top',\n      'top-end',\n      'right-start',\n      'right',\n      'right-end',\n      'bottom-end',\n      'bottom',\n      'bottom-start',\n      'left-end',\n      'left',\n      'left-start',\n    ]),\n    /**\n     * Set this to `true` if you want popper to position it self in `fixed` mode.\n     */\n    positionFixed: PropTypes.bool,\n    /**\n     * Parent component for tooltip and reference element.\n     */\n    component: PropTypes.string,\n    /**\n     * Padding from tooltip to reference element in `px`.\n     */\n    offset: PropTypes.number,\n    /**\n     * If `true`, the tooltip is shown.\n     */\n    open: PropTypes.bool, // eslint-disable-line\n    /**\n     * Callback fired when the tooltip requests to be closed (works only with `open` prop).\n     */\n    onClose: PropTypes.func,\n    /**\n     * The number of milliseconds to wait before automatically calling\n     * the onClose function. onClose should then set the state of\n     * the open prop to hide the Tooltip. This behavior is disabled by\n     * default with the null value.\n     */\n    autoHideDuration: PropTypes.number,\n    /**\n     * Color for tooltip component.\n     */\n    color: PropTypes.string,\n    /**\n     * Z-index for tooltip component.\n     */\n    zIndex: PropTypes.number,\n    /**\n     * If `true`, the tooltip overlay will show for opened tooltip.\n     */\n    overlay: PropTypes.bool,\n    /**\n     * Color for tooltip overlay background.\n     */\n    overlayColor: PropTypes.string,\n    /**\n     * Opacity for tooltip overlay.\n     */\n    overlayOpacity: PropTypes.number,\n    /**\n     * Z-index for tooltip overlay.\n     */\n    overlayZIndex: PropTypes.number,\n    /**\n     * HTML props for tooltip overlay.\n     */\n    overlayProps: PropTypes.oneOfType([\n      PropTypes.object,\n    ]),\n    /**\n     * Use React portal for render tooltip to another elemenet.\n     */\n    usePortal: PropTypes.oneOfType([PropTypes.bool, PropTypes.instanceOf(HTMLElement)]),\n    /**\n     * Use preventOverflow for prevent overflow on tooltip.\n     */\n    preventOverflow: PropTypes.bool,\n    /**\n     * Use preventFlip for prevent flipping tooltip, when no space.\n     */\n    preventFlip: PropTypes.bool,\n    /**\n     * Class name for tooltip popper root element\n     */\n    classNameTooltip: PropTypes.string,\n    /**\n     * Class name for tooltip popper content element\n     */\n    classNameTooltipContent: PropTypes.string,\n    /**\n     * The number of milliseconds to wait before showing the tooltip.\n     */\n    showDelay: PropTypes.number,\n    /**\n     * Flip boundary element modifier\n     */\n    flipBoundaryElement: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(HTMLElement)]),\n  }\n\n  static defaultProps = {\n    action: 'hover',\n    arrow: true,\n    placement: 'auto',\n    positionFixed: true,\n    component: 'div',\n    offset: 10,\n    onClose() { },\n    autoHideDuration: 0,\n    color: 'white',\n    zIndex: 1,\n    overlay: false,\n    overlayColor: 'black',\n    overlayOpacity: 0.3,\n    overlayZIndex: 0,\n    overlayProps: {},\n    usePortal: false,\n    preventOverflow: true,\n    preventFlip: false,\n    classNameTooltip: '',\n    classNameTooltipContent: '',\n    showDelay: 0,\n    flipBoundaryElement: 'viewport',\n  }\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      open: !!props.open,\n    };\n\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onMouseDown = this.onMouseDown.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n    this.onMouseLeave = this.onMouseLeave.bind(this);\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onDocumentClick = this.onDocumentClick.bind(this);\n\n    this.focusTime = 0;\n    this.preClickTime = 0;\n    this.preTouchTime = 0;\n    this.parentNode = null;\n  }\n\n  componentDidMount() {\n    if (this.isClickToHide()) {\n      window.document.addEventListener('mousedown', this.onDocumentClick);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { open } = nextProps;\n\n    if (open !== undefined) {\n      this.setState({\n        open,\n      });\n\n      if (open) {\n        this._setAutoHideTimer();\n      } else if (this.timerAutoHide) {\n        clearTimeout(this.timerAutoHide);\n        this.timerAutoHide = null;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerAutoHide) {\n      clearTimeout(this.timerAutoHide);\n      this.timerAutoHide = null;\n    }\n\n    window.document.removeEventListener('mousedown', this.onDocumentClick);\n  }\n\n  /**\n   * onFocus handler\n   * @param {SytheticEvent} e\n   */\n  onFocus(e) {\n    this.fireEvents('onFocus', e);\n\n    this.focusTime = Date.now();\n    this.setOpen(true);\n  }\n\n  /**\n   * onBlur handler\n   * @param {SytheticEvent} e\n   */\n  onBlur(e) {\n    this.fireEvents('onBlur', e);\n\n    this.setOpen(false);\n  }\n\n  /**\n   * onClick handler\n   * @param {SytheticEvent} e\n   */\n  onClick(e) {\n    const { open } = this.state;\n\n    this.fireEvents('onClick', e);\n\n    // focus will trigger click\n    if (this.focusTime) {\n      let preTime;\n\n      if (this.preClickTime && this.preTouchTime) {\n        preTime = Math.min(this.preClickTime, this.preTouchTime);\n      } else if (this.preClickTime) {\n        preTime = this.preClickTime;\n      } else if (this.preTouchTime) {\n        preTime = this.preTouchTime;\n      }\n\n      if (Math.abs(preTime - this.focusTime) < 20) {\n        return;\n      }\n\n      this.focusTime = 0;\n    }\n\n    this.preClickTime = 0;\n    this.preTouchTime = 0;\n\n    if (e && e.preventDefault) {\n      e.preventDefault();\n    }\n\n    if (this.isClickToHide() && open || !open && this.isClickToShow()) {\n      this.setOpen(!open);\n    }\n  }\n\n  /**\n   * onMouseDown handler\n   * @param {SytheticEvent} e\n   */\n  onMouseDown(e) {\n    this.fireEvents('onMouseDown', e);\n    this.preClickTime = Date.now();\n  }\n\n  /**\n   * onMouseEnter handler\n   * @param {SytheticEvent} e\n   */\n  onMouseEnter() {\n    this.setOpen(true);\n  }\n\n  /**\n   * onMouseLeave handler\n   * @param {SytheticEvent} e\n   */\n  onMouseLeave() {\n    this.setOpen(false);\n  }\n\n  /**\n   * onTouchStart handler\n   * @param {SytheticEvent} e\n   */\n  onTouchStart(e) {\n    this.fireEvents('onTouchStart', e);\n    this.preTouchTime = Date.now();\n  }\n\n  /**\n   * onDocumentClick handler\n   * @param {SytheticEvent} e\n   */\n  onDocumentClick(e) {\n    const { usePortal } = this.props;\n    const { open } = this.state;\n    const { target } = e;\n    const tooltipRoot = document.querySelector('[data-component=\"tooltip_popper\"]');\n\n    if (usePortal && tooltipRoot) {\n      if (!contains(tooltipRoot, target) && open) {\n        this.setOpen(false);\n      }\n\n      return;\n    }\n\n    const root = findDOMNode(this.parentNode); // eslint-disable-line\n\n    if (!contains(root, target) && open) {\n      this.setOpen(false);\n    }\n  }\n\n  /**\n   * Handler for show/hide tooltip\n   * @param {boolean} value\n   */\n  setOpen(value) {\n    const { onClose } = this.props;\n    const { open } = this.state;\n\n    if (open !== value) {\n      if (!('open' in this.props)) {\n        this.setState({\n          open: value,\n        });\n\n        if (onClose && !value) {\n          onClose();\n        }\n      }\n    }\n  }\n\n  timerAutoHide = null;\n\n  /**\n   * Set timer for fire onClose callback\n   * @param {number} duration\n   */\n  _setAutoHideTimer(duration = null) {\n    const { onClose, autoHideDuration } = this.props;\n\n    if (!onClose || !autoHideDuration) {\n      return;\n    }\n\n    if (this.timerAutoHide) {\n      clearTimeout(this.timerAutoHide);\n    }\n\n    this.timerAutoHide = setTimeout(() => {\n      this.timerAutoHide = null;\n\n      if (!onClose || !autoHideDuration) {\n        return;\n      }\n\n      onClose();\n    }, duration || autoHideDuration || 0);\n  }\n\n  /**\n   * Call callback event props\n   * @param {string} type\n   * @param {SytheticEvent} e\n   */\n  fireEvents(type, e) {\n    const { children } = this.props;\n    const callback = this.props[type];\n    const childCallback = children.props[type];\n\n    if (childCallback) {\n      childCallback(e);\n    }\n\n    if (callback) {\n      callback(e);\n    }\n  }\n\n  createTwoChains(event) {\n    const childPros = this.props.children.props;\n    const props = this.props;\n\n    if (childPros[event] && props[event]) {\n      return this[`fire${event}`];\n    }\n\n    return childPros[event];\n  }\n\n  /**\n   * Check if action prop have `click` string for show tooltip\n   * @return {boolean}\n   */\n  isClickToShow() {\n    const { action } = this.props;\n\n    return action.indexOf('click') !== -1;\n  }\n\n  /**\n   * Check if action prop have `click` string for hide tooltip\n   * @return {boolean}\n   */\n  isClickToHide() {\n    const { action } = this.props;\n\n    return action.indexOf('click') !== -1;\n  }\n\n  /**\n   * Check if action prop have `hover` string for show tooltip\n   * @return {boolean}\n   */\n  isMouseEnterToShow() {\n    const { action } = this.props;\n\n    return action.indexOf('hover') !== -1;\n  }\n\n  /**\n   * Check if action prop have `hover` string for hide tooltip\n   * @return {boolean}\n   */\n  isMouseLeaveToHide() {\n    const { action } = this.props;\n\n    return action.indexOf('hover') !== -1;\n  }\n\n  /**\n   * Check if action prop have `focus` string for show tooltip\n   * @return {boolean}\n   */\n  isFocusToShow() {\n    const { action } = this.props;\n\n    return action.indexOf('focus') !== -1;\n  }\n\n  /**\n   * Check if action prop have `focus` string for hide tooltip\n   * @return {boolean}\n   */\n  isBlurToHide() {\n    const { action } = this.props;\n\n    return action.indexOf('focus') !== -1;\n  }\n\n  /**\n   * Handler for delay timer for click current work\n   */\n  clearDelayTimer() {\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n  }\n\n  renderOverlay() {\n    const {\n      overlay,\n      overlayColor,\n      overlayOpacity,\n      overlayZIndex,\n      overlayProps,\n      action,\n    } = this.props;\n    const { open } = this.state;\n\n    if (overlay && action === 'click') {\n      const {\n        className,\n        style,\n        ...other\n      } = overlayProps;\n\n      return (\n        <Portal>\n          <div\n            data-open={open}\n            className={classnames(\n              'tooltip_overlay',\n              `fill_${overlayColor}`,\n              className,\n            )}\n            style={{\n              opacity: open ? overlayOpacity : 0,\n              zIndex: overlayZIndex,\n              ...style,\n            }}\n            {...other}\n          />\n        </Portal>\n      );\n    }\n\n    return null;\n  }\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const {\n      children,\n      content,\n      action,\n      arrow,\n      placement,\n      positionFixed,\n      component: C,\n      offset,\n      open: openProp,\n      onClose,\n      autoHideDuration,\n      color,\n      zIndex,\n      overlay,\n      overlayColor,\n      overlayOpacity,\n      overlayZIndex,\n      overlayProps,\n      usePortal,\n      preventOverflow,\n      preventFlip,\n      classNameTooltip,\n      classNameTooltipContent,\n      showDelay,\n      flipBoundaryElement,\n      ...other\n    } = this.props;\n    const { open } = this.state;\n    const newWrapperProps = Object.assign({}, other);\n    const newChildProps = {};\n\n    if (this.isClickToHide() || this.isClickToShow()) {\n      newChildProps.onClick = this.onClick;\n      newChildProps.onMouseDown = this.onMouseDown;\n      newChildProps.onTouchStart = this.onTouchStart;\n    } else {\n      newChildProps.onClick = this.createTwoChains('onClick');\n      newChildProps.onMouseDown = this.createTwoChains('onMouseDown');\n      newChildProps.onTouchStart = this.createTwoChains('onTouchStart');\n    }\n\n    if (this.isMouseEnterToShow()) {\n      newWrapperProps.onMouseOver = this.onMouseEnter;\n    }\n\n    if (this.isMouseLeaveToHide()) {\n      newWrapperProps.onMouseLeave = this.onMouseLeave;\n    }\n\n    if (this.isFocusToShow() || this.isBlurToHide()) {\n      newChildProps.onFocus = this.onFocus;\n      newChildProps.onBlur = this.onBlur;\n    } else {\n      newChildProps.onFocus = this.createTwoChains('onFocus');\n      newChildProps.onBlur = this.createTwoChains('onBlur');\n    }\n\n    return (\n      <Fragment>\n        {this.renderOverlay()}\n        <C\n          {...newWrapperProps}\n          ref={(node) => { this.parentNode = node; }}\n          data-component=\"tooltip\"\n        >\n          {React.cloneElement(children, newChildProps)}\n          <TooltipPopper\n            open={open}\n            referenceElement={this.parentNode || {}}\n            placement={placement}\n            positionFixed={positionFixed}\n            arrow={arrow}\n            offset={offset}\n            color={color}\n            zIndex={zIndex}\n            usePortal={usePortal}\n            preventOverflow={preventOverflow}\n            preventFlip={preventFlip}\n            classNameTooltip={classNameTooltip}\n            classNameTooltipContent={classNameTooltipContent}\n            showDelay={showDelay}\n            flipBoundaryElement={flipBoundaryElement}\n          >\n            {content}\n          </TooltipPopper>\n        </C>\n      </Fragment>\n    );\n  }\n}\n"]}