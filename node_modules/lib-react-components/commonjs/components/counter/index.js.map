{"version":3,"sources":["../../../src/components/counter/index.jsx"],"names":["prepareValue","value","defaultValue","Counter","props","onKeyDown","e","keyCode","preventDefault","onChange","state","add","minValue","maxValue","newSize","setState","bgType","color","textColor","colorFocus","minValuePlaceholder","maxValuePlaceholder","disabled","inputProps","counterProps","inputValue","readOnly","className","stopPropagation","React","Component","propTypes","PropTypes","number","func","oneOfType","string","bool","oneOf","object","defaultProps","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,YAA7B,EAA2C;AACzC,MAAID,SAAS,OAAOA,KAAP,KAAiB,QAA9B,EAAwC;AACtC,WAAOA,KAAP;AACD;;AAED,MAAIC,gBAAgB,OAAOA,YAAP,KAAwB,QAA5C,EAAsD;AACpD,WAAOA,YAAP;AACD;;AAED,SAAO,EAAP;AACD;;IAEKC,O;;;AA6CJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kHACXA,KADW;;AAAA,UAUnBC,SAVmB,GAUP,UAACC,CAAD,EAAO;AACjB,UAAIA,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,UAAEE,cAAF;AACA,cAAKC,QAAL,CAAc,CAAd;AACD;;AAED,UAAIH,EAAEC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,UAAEE,cAAF;AACA,cAAKC,QAAL,CAAc,CAAC,CAAf;AACD;AACF,KApBkB;;AAAA,QAGTR,KAHS,GAGeG,KAHf,CAGTH,KAHS;AAAA,QAGFC,YAHE,GAGeE,KAHf,CAGFF,YAHE;;;AAKjB,UAAKQ,KAAL,GAAa;AACXT,aAAOD,aAAaC,KAAb,EAAoBC,YAApB;AADI,KAAb;AALiB;AAQlB;;;;6BAcQS,G,EAAK;AAAA,mBAC6B,KAAKP,KADlC;AAAA,UACJQ,QADI,UACJA,QADI;AAAA,UACMC,QADN,UACMA,QADN;AAAA,UACgBJ,QADhB,UACgBA,QADhB;AAAA,UAEJR,KAFI,GAEM,KAAKS,KAFX,CAEJT,KAFI;;AAGZ,UAAMa,UAAUb,QAAQU,GAAxB;;AAEA,UAAIC,YAAYE,OAAZ,IAAuBA,WAAWD,QAAtC,EAAgD;AAC9C,aAAKE,QAAL,CAAc,EAAEd,OAAOa,OAAT,EAAd;AACAL,iBAASK,OAAT;;AAEA;AACD;;AAED,UAAIA,UAAUF,QAAd,EAAwB;AACtB,aAAKG,QAAL,CAAc,EAAEd,OAAOY,QAAT,EAAd;AACAJ,iBAASK,OAAT;;AAEA;AACD;;AAED,WAAKC,QAAL,CAAc,EAAEd,OAAOW,QAAT,EAAd;AACAH,eAASK,OAAT;AACD;;;6BAEQ;AAAA;;AAAA,UACCb,KADD,GACW,KAAKS,KADhB,CACCT,KADD;AAAA,oBAcH,KAAKG,KAdF;AAAA,UAGLY,MAHK,WAGLA,MAHK;AAAA,UAILC,KAJK,WAILA,KAJK;AAAA,UAKLC,SALK,WAKLA,SALK;AAAA,UAMLC,UANK,WAMLA,UANK;AAAA,UAOLP,QAPK,WAOLA,QAPK;AAAA,UAQLQ,mBARK,WAQLA,mBARK;AAAA,UASLP,QATK,WASLA,QATK;AAAA,UAULQ,mBAVK,WAULA,mBAVK;AAAA,UAWLC,QAXK,WAWLA,QAXK;AAAA,UAYLC,UAZK,WAYLA,UAZK;AAAA,UAaLC,YAbK,WAaLA,YAbK;;;AAgBP,UAAIC,aAAaxB,KAAjB;;AAEA,UAAIW,aAAaX,KAAb,IAAsBmB,mBAA1B,EAA+C;AAC7CK,qBAAaL,mBAAb;AACD;;AAED,UAAIP,aAAaZ,KAAb,IAAsBoB,mBAA1B,EAA+C;AAC7CI,qBAAaJ,mBAAb;AACD;;AAED,aACE;AAAC,uBAAD;AAAA;AACE,kBAAQL,MADV;AAEE,iBAAOC,KAFT;AAGE,qBAAWC,SAHb;AAIE,sBAAYC,UAJd;AAKE,iBAAOM,UALT;AAME,oBAAUH,QANZ;AAOE,qBAAW,KAAKjB,SAPlB;AAQE,mBAAS;AAAA,mBAAM,OAAKI,QAAL,CAAc,CAAd,CAAN;AAAA,WARX;AASE,gBAAK,SATP;AAUE;AACEiB,sBAAU,IADZ;AAEEC,uBAAW;AAFb,aAGKJ,UAHL;AAVF,WAeMC,YAfN;AAiBE,sCAAC,uBAAD;AACE,qBAAU,kBADZ;AAEE,mBAAS;AAAA,mBAAM,OAAKf,QAAL,CAAc,CAAd,CAAN;AAAA,WAFX;AAGE,qBAAQ;AAHV,UAjBF;AAsBE,sCAAC,uBAAD;AACE,qBAAU,kBADZ;AAEE,mBAAS,iBAACH,CAAD,EAAO;AACdA,cAAEsB,eAAF;AACA,mBAAKnB,QAAL,CAAc,CAAC,CAAf;AACD,WALH;AAME,qBAAQ;AANV;AAtBF,OADF;AAiCD;;;;EArJmBoB,gBAAMC,S;;AAAtB3B,O,CACG4B,S,GAAY;AACjB9B,SAAO+B,oBAAUC,MADA;AAEjB/B,gBAAc8B,oBAAUC,MAFP;AAGjBrB,YAAUoB,oBAAUC,MAHH;AAIjBpB,YAAUmB,oBAAUC,MAJH;AAKjBxB,YAAUuB,oBAAUE,IALH;AAMjBd,uBAAqBY,oBAAUG,SAAV,CAAoB,CACvCH,oBAAUI,MAD6B,EAEvCJ,oBAAUC,MAF6B,CAApB,CANJ;AAUjBZ,uBAAqBW,oBAAUG,SAAV,CAAoB,CACvCH,oBAAUI,MAD6B,EAEvCJ,oBAAUC,MAF6B,CAApB,CAVJ;AAcjBX,YAAUU,oBAAUK,IAdH;AAejBrB,UAAQgB,oBAAUM,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,CAfS;AAgBjBrB,SAAOe,oBAAUI,MAhBA;AAiBjBlB,aAAWc,oBAAUI,MAjBJ;AAkBjBjB,cAAYa,oBAAUI,MAlBL;AAmBjBb,cAAYS,oBAAUG,SAAV,CAAoB,CAC9BH,oBAAUO,MADoB,CAApB,CAnBK;AAsBjBf,gBAAcQ,oBAAUG,SAAV,CAAoB,CAChCH,oBAAUO,MADsB,CAApB;AAtBG,C;AADfpC,O,CA4BGqC,Y,GAAe;AACpBvC,SAAOwC,SADa;AAEpBvC,gBAAc,CAFM;AAGpBU,YAAU6B,SAHU;AAIpB5B,YAAU4B,SAJU;AAKpBhC,UALoB,sBAKT,CAAE,CALO;;AAMpBW,uBAAqBqB,SAND;AAOpBpB,uBAAqBoB,SAPD;AAQpBnB,YAAU,KARU;AASpBN,UAAQ,MATY;AAUpBC,SAAO,YAVa;AAWpBC,aAAW,OAXS;AAYpBK,cAAY,EAZQ;AAapBC,gBAAc,EAbM;AAcpBL,cAAY;AAdQ,C;kBA4HT,6BAAchB,OAAd,EAAuB,UAAvB,C","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport withAnalytics from '../../containers/analytics_hoc';\nimport Input from '../text_field/input';\nimport CounterTriangleIcon from '../icons/counter_arrow';\n\nfunction prepareValue(value, defaultValue) {\n  if (value || typeof value === 'number') {\n    return value;\n  }\n\n  if (defaultValue || typeof defaultValue === 'number') {\n    return defaultValue;\n  }\n\n  return '';\n}\n\nclass Counter extends React.Component {\n  static propTypes = {\n    value: PropTypes.number,\n    defaultValue: PropTypes.number,\n    minValue: PropTypes.number,\n    maxValue: PropTypes.number,\n    onChange: PropTypes.func,\n    minValuePlaceholder: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    maxValuePlaceholder: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    disabled: PropTypes.bool,\n    bgType: PropTypes.oneOf(['fill', 'stroke']),\n    color: PropTypes.string,\n    textColor: PropTypes.string,\n    colorFocus: PropTypes.string,\n    inputProps: PropTypes.oneOfType([\n      PropTypes.object,\n    ]),\n    counterProps: PropTypes.oneOfType([\n      PropTypes.object,\n    ]),\n  }\n\n  static defaultProps = {\n    value: undefined,\n    defaultValue: 0,\n    minValue: undefined,\n    maxValue: undefined,\n    onChange() {},\n    minValuePlaceholder: undefined,\n    maxValuePlaceholder: undefined,\n    disabled: false,\n    bgType: 'fill',\n    color: 'light_grey',\n    textColor: 'black',\n    inputProps: {},\n    counterProps: {},\n    colorFocus: 'primary',\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { value, defaultValue } = props;\n\n    this.state = {\n      value: prepareValue(value, defaultValue),\n    };\n  }\n\n  onKeyDown = (e) => {\n    if (e.keyCode === 38) {\n      e.preventDefault();\n      this.onChange(1);\n    }\n\n    if (e.keyCode === 40) {\n      e.preventDefault();\n      this.onChange(-1);\n    }\n  }\n\n  onChange(add) {\n    const { minValue, maxValue, onChange } = this.props;\n    const { value } = this.state;\n    const newSize = value + add;\n\n    if (minValue <= newSize && newSize <= maxValue) {\n      this.setState({ value: newSize });\n      onChange(newSize);\n\n      return;\n    }\n\n    if (newSize < minValue) {\n      this.setState({ value: maxValue });\n      onChange(newSize);\n\n      return;\n    }\n\n    this.setState({ value: minValue });\n    onChange(newSize);\n  }\n\n  render() {\n    const { value } = this.state;\n    const {\n      bgType,\n      color,\n      textColor,\n      colorFocus,\n      minValue,\n      minValuePlaceholder,\n      maxValue,\n      maxValuePlaceholder,\n      disabled,\n      inputProps,\n      counterProps,\n    } = this.props;\n\n    let inputValue = value;\n\n    if (minValue === value && minValuePlaceholder) {\n      inputValue = minValuePlaceholder;\n    }\n\n    if (maxValue === value && maxValuePlaceholder) {\n      inputValue = maxValuePlaceholder;\n    }\n\n    return (\n      <Input\n        bgType={bgType}\n        color={color}\n        textColor={textColor}\n        colorFocus={colorFocus}\n        value={inputValue}\n        disabled={disabled}\n        onKeyDown={this.onKeyDown}\n        onClick={() => this.onChange(1)}\n        name=\"counter\"\n        inputProps={{\n          readOnly: true,\n          className: 'counter',\n          ...inputProps,\n        }}\n        {...counterProps}\n      >\n        <CounterTriangleIcon\n          className=\"counter_triangle\"\n          onClick={() => this.onChange(1)}\n          data-id=\"increase-triangle\"\n        />\n        <CounterTriangleIcon\n          className=\"counter_triangle\"\n          onClick={(e) => {\n            e.stopPropagation();\n            this.onChange(-1);\n          }}\n          data-id=\"decrease-triangle\"\n        />\n      </Input>\n    );\n  }\n}\n\nexport default withAnalytics(Counter, 'onChange');\n"]}