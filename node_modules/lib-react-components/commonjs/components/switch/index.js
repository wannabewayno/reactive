'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames5 = require('classnames');

var _classnames6 = _interopRequireDefault(_classnames5);

var _switch_handler = require('../switch_handler');

var _switch_handler2 = _interopRequireDefault(_switch_handler);

var _analytics_hoc = require('../../containers/analytics_hoc');

var _analytics_hoc2 = _interopRequireDefault(_analytics_hoc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Switch component
 */
var Switch = function (_SwitchHandler) {
  _inherits(Switch, _SwitchHandler);

  function Switch() {
    _classCallCheck(this, Switch);

    return _possibleConstructorReturn(this, (Switch.__proto__ || Object.getPrototypeOf(Switch)).apply(this, arguments));
  }

  _createClass(Switch, [{
    key: 'render',

    /**
     * render
     * @return {ReactElement} markup
     */
    value: function render() {
      var _classnames, _classnames2;

      var _props = this.props,
          name = _props.name,
          defaultChecked = _props.defaultChecked,
          disabled = _props.disabled,
          onCheck = _props.onCheck,
          checked = _props.checked,
          inputProps = _props.inputProps,
          label = _props.label,
          labelPosition = _props.labelPosition,
          labelProps = _props.labelProps,
          className = _props.className,
          tabIndex = _props.tabIndex,
          bgType = _props.bgType,
          color = _props.color,
          colorOn = _props.colorOn,
          iconColor = _props.iconColor,
          iconColorOn = _props.iconColorOn,
          other = _objectWithoutProperties(_props, ['name', 'defaultChecked', 'disabled', 'onCheck', 'checked', 'inputProps', 'label', 'labelPosition', 'labelProps', 'className', 'tabIndex', 'bgType', 'color', 'colorOn', 'iconColor', 'iconColorOn']);

      var checkedState = this.state.checkedState;


      return _react2.default.createElement(
        'div',
        _extends({
          'data-component': 'switch',
          'data-type': bgType,
          'data-checked': checkedState,
          'data-disabled': disabled,
          className: (0, _classnames6.default)('switch', className)
        }, other),
        _react2.default.createElement('input', _extends({}, inputProps, {
          tabIndex: tabIndex,
          type: 'checkbox',
          className: 'switch_input',
          onChange: this.onChange,
          disabled: disabled,
          checked: checkedState,
          name: name
        })),
        labelPosition === 'left' ? this.renderLabel() : null,
        _react2.default.createElement(
          'div',
          {
            className: (0, _classnames6.default)('switch_container', (_classnames = {}, _defineProperty(_classnames, 'stroke_' + color, !checkedState), _defineProperty(_classnames, 'fill_' + color, !checkedState), _classnames), (_classnames2 = {}, _defineProperty(_classnames2, 'stroke_' + colorOn, checkedState), _defineProperty(_classnames2, 'fill_' + colorOn, checkedState), _classnames2)),
            'data-component': 'switch_container'
          },
          _react2.default.createElement('div', {
            className: (0, _classnames6.default)('switch_tumbler', _defineProperty({}, 'fill_' + iconColor, !checkedState), _defineProperty({}, 'fill_' + iconColorOn, checkedState))
          })
        ),
        labelPosition === 'right' ? this.renderLabel() : null
      );
    }
  }]);

  return Switch;
}(_switch_handler2.default);

exports.default = (0, _analytics_hoc2.default)(Switch, 'onCheck');
//# sourceMappingURL=index.js.map