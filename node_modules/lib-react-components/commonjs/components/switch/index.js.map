{"version":3,"sources":["../../../src/components/switch/index.jsx"],"names":["Switch","props","name","defaultChecked","disabled","onCheck","checked","inputProps","label","labelPosition","labelProps","className","tabIndex","bgType","color","colorOn","iconColor","iconColorOn","other","checkedState","state","onChange","renderLabel","SwitchHandler"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA;;;IAGMA,M;;;;;;;;;;;;AACJ;;;;6BAIS;AAAA;;AAAA,mBAmBH,KAAKC,KAnBF;AAAA,UAELC,IAFK,UAELA,IAFK;AAAA,UAGLC,cAHK,UAGLA,cAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,OALK,UAKLA,OALK;AAAA,UAMLC,OANK,UAMLA,OANK;AAAA,UAOLC,UAPK,UAOLA,UAPK;AAAA,UAQLC,KARK,UAQLA,KARK;AAAA,UASLC,aATK,UASLA,aATK;AAAA,UAULC,UAVK,UAULA,UAVK;AAAA,UAWLC,SAXK,UAWLA,SAXK;AAAA,UAYLC,QAZK,UAYLA,QAZK;AAAA,UAaLC,MAbK,UAaLA,MAbK;AAAA,UAcLC,KAdK,UAcLA,KAdK;AAAA,UAeLC,OAfK,UAeLA,OAfK;AAAA,UAgBLC,SAhBK,UAgBLA,SAhBK;AAAA,UAiBLC,WAjBK,UAiBLA,WAjBK;AAAA,UAkBFC,KAlBE;;AAAA,UAoBCC,YApBD,GAoBkB,KAAKC,KApBvB,CAoBCD,YApBD;;;AAsBP,aACE;AAAA;AAAA;AACE,4BAAe,QADjB;AAEE,uBAAWN,MAFb;AAGE,0BAAcM,YAHhB;AAIE,2BAAef,QAJjB;AAKE,qBAAW,0BACT,QADS,EAETO,SAFS;AALb,WASMO,KATN;AAWE,4DACMX,UADN;AAEE,oBAAUK,QAFZ;AAGE,gBAAK,UAHP;AAIE,qBAAU,cAJZ;AAKE,oBAAU,KAAKS,QALjB;AAME,oBAAUjB,QANZ;AAOE,mBAASe,YAPX;AAQE,gBAAMjB;AARR,WAXF;AAqBGO,0BAAkB,MAAlB,GAA2B,KAAKa,WAAL,EAA3B,GAAgD,IArBnD;AAsBE;AAAA;AAAA;AACE,uBAAW,0BACT,kBADS,8DAGIR,KAHJ,EAGc,CAACK,YAHf,0CAIEL,KAJF,EAIY,CAACK,YAJb,+EAOIJ,OAPJ,EAOgBI,YAPhB,2CAQEJ,OARF,EAQcI,YARd,iBADb;AAYE,8BAAe;AAZjB;AAcE;AACE,uBAAW,0BACT,gBADS,gCAGEH,SAHF,EAGgB,CAACG,YAHjB,iCAMEF,WANF,EAMkBE,YANlB;AADb;AAdF,SAtBF;AAgDGV,0BAAkB,OAAlB,GAA4B,KAAKa,WAAL,EAA5B,GAAiD;AAhDpD,OADF;AAoDD;;;;EA/EkBC,wB;;kBAkFN,6BAAcvB,MAAd,EAAsB,SAAtB,C","file":"index.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport SwitchHandler from '../switch_handler';\nimport withAnalytics from '../../containers/analytics_hoc';\n\n/**\n * Switch component\n */\nclass Switch extends SwitchHandler {\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const {\n      name,\n      defaultChecked,\n      disabled,\n      onCheck,\n      checked,\n      inputProps,\n      label,\n      labelPosition,\n      labelProps,\n      className,\n      tabIndex,\n      bgType,\n      color,\n      colorOn,\n      iconColor,\n      iconColorOn,\n      ...other\n    } = this.props;\n    const { checkedState } = this.state;\n\n    return (\n      <div\n        data-component=\"switch\"\n        data-type={bgType}\n        data-checked={checkedState}\n        data-disabled={disabled}\n        className={classnames(\n          'switch',\n          className,\n        )}\n        {...other}\n      >\n        <input\n          {...inputProps}\n          tabIndex={tabIndex}\n          type=\"checkbox\"\n          className=\"switch_input\"\n          onChange={this.onChange}\n          disabled={disabled}\n          checked={checkedState}\n          name={name}\n        />\n        {labelPosition === 'left' ? this.renderLabel() : null}\n        <div\n          className={classnames(\n            'switch_container',\n            {\n              [`stroke_${color}`]: !checkedState,\n              [`fill_${color}`]: !checkedState,\n            },\n            {\n              [`stroke_${colorOn}`]: checkedState,\n              [`fill_${colorOn}`]: checkedState,\n            },\n          )}\n          data-component=\"switch_container\"\n        >\n          <div\n            className={classnames(\n              'switch_tumbler',\n              {\n                [`fill_${iconColor}`]: !checkedState,\n              },\n              {\n                [`fill_${iconColorOn}`]: checkedState,\n              },\n            )}\n          />\n        </div>\n        {labelPosition === 'right' ? this.renderLabel() : null}\n      </div>\n    );\n  }\n}\n\nexport default withAnalytics(Switch, 'onCheck');\n"]}