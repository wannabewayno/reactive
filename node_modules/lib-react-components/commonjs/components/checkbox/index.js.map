{"version":3,"sources":["../../../src/components/checkbox/index.jsx"],"names":["Checkbox","props","name","defaultChecked","disabled","onCheck","checked","inputProps","label","labelPosition","labelProps","className","tabIndex","bgType","color","colorOn","iconColor","iconColorOn","iconType","other","checkedState","state","onChange","renderLabel","SwitchHandler","propTypes","PropTypes","string","defaultProps"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA;;;IAGMA,Q;;;;;;;;;;;;AACJ;;;;;6BAeS;AAAA;;AAAA,mBAoBH,KAAKC,KApBF;AAAA,UAELC,IAFK,UAELA,IAFK;AAAA,UAGLC,cAHK,UAGLA,cAHK;AAAA,UAILC,QAJK,UAILA,QAJK;AAAA,UAKLC,OALK,UAKLA,OALK;AAAA,UAMLC,OANK,UAMLA,OANK;AAAA,UAOLC,UAPK,UAOLA,UAPK;AAAA,UAQLC,KARK,UAQLA,KARK;AAAA,UASLC,aATK,UASLA,aATK;AAAA,UAULC,UAVK,UAULA,UAVK;AAAA,UAWLC,SAXK,UAWLA,SAXK;AAAA,UAYLC,QAZK,UAYLA,QAZK;AAAA,UAaLC,MAbK,UAaLA,MAbK;AAAA,UAcLC,KAdK,UAcLA,KAdK;AAAA,UAeLC,OAfK,UAeLA,OAfK;AAAA,UAgBLC,SAhBK,UAgBLA,SAhBK;AAAA,UAiBLC,WAjBK,UAiBLA,WAjBK;AAAA,UAkBLC,QAlBK,UAkBLA,QAlBK;AAAA,UAmBFC,KAnBE;;AAAA,UAqBCC,YArBD,GAqBkB,KAAKC,KArBvB,CAqBCD,YArBD;;;AAuBP,aACE;AAAA;AAAA;AACE,4BAAe,UADjB;AAEE,uBAAWP,MAFb;AAGE,0BAAcO,YAHhB;AAIE,2BAAehB,QAJjB;AAKE,qBAAW,0BACT,UADS,EAETO,SAFS;AALb,WASMQ,KATN;AAWE,4DACMZ,UADN;AAEE,oBAAUK,QAFZ;AAGE,gBAAK,UAHP;AAIE,qBAAU,gBAJZ;AAKE,oBAAU,KAAKU,QALjB;AAME,oBAAUlB,QANZ;AAOE,mBAASgB,YAPX;AAQE,gBAAMlB;AARR,WAXF;AAqBGO,0BAAkB,MAAlB,GAA2B,KAAKc,WAAL,EAA3B,GAAgD,IArBnD;AAsBE;AAAA;AAAA;AACE,uBAAW,0BACT,oBADS,8DAGIT,KAHJ,EAGc,CAACM,YAHf,0CAIEN,KAJF,EAIY,CAACM,YAJb,+EAOIL,OAPJ,EAOgBK,YAPhB,2CAQEL,OARF,EAQcK,YARd,iBADb;AAYE,8BAAe;AAZjB;AAcGF,uBAAa,QAAb,GACC;AACE,uBAAW,0BACT,sBADS,gCAGEF,SAHF,EAGgB,CAACI,YAHjB,iCAMEH,WANF,EAMkBG,YANlB;AADb,YADD,GAaC,8BAAC,mBAAD;AACE,uBAAW,0BACT,yBADS,gCAGEJ,SAHF,EAGgB,CAACI,YAHjB,iCAMEH,WANF,EAMkBG,YANlB;AADb;AA3BJ,SAtBF;AA8DGX,0BAAkB,OAAlB,GAA4B,KAAKc,WAAL,EAA5B,GAAiD;AA9DpD,OADF;AAkED;;;;EAzGoBC,wB;;AAAjBxB,Q,CAMGyB,S,gBACFD,yBAAcC,S;AACjBP,YAAUQ,oBAAUC;;AARlB3B,Q,CAWG4B,Y,gBACFJ,yBAAcI,Y;AACjBV,YAAU;;kBA+FC,6BAAclB,QAAd,EAAwB,SAAxB,C","file":"index.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport withAnalytics from '../../containers/analytics_hoc';\nimport SwitchHandler from '../switch_handler';\nimport CheckmarkIcon from '../icons/checkmark';\n\n/**\n * Checkbox component\n */\nclass Checkbox extends SwitchHandler {\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n\n  static propTypes = {\n    ...SwitchHandler.propTypes,\n    iconType: PropTypes.string,\n  };\n\n  static defaultProps = {\n    ...SwitchHandler.defaultProps,\n    iconType: 'checkmark',\n  };\n\n  render() {\n    const {\n      name,\n      defaultChecked,\n      disabled,\n      onCheck,\n      checked,\n      inputProps,\n      label,\n      labelPosition,\n      labelProps,\n      className,\n      tabIndex,\n      bgType,\n      color,\n      colorOn,\n      iconColor,\n      iconColorOn,\n      iconType,\n      ...other\n    } = this.props;\n    const { checkedState } = this.state;\n\n    return (\n      <div\n        data-component=\"checkbox\"\n        data-type={bgType}\n        data-checked={checkedState}\n        data-disabled={disabled}\n        className={classnames(\n          'checkbox',\n          className,\n        )}\n        {...other}\n      >\n        <input\n          {...inputProps}\n          tabIndex={tabIndex}\n          type=\"checkbox\"\n          className=\"checkbox_input\"\n          onChange={this.onChange}\n          disabled={disabled}\n          checked={checkedState}\n          name={name}\n        />\n        {labelPosition === 'left' ? this.renderLabel() : null}\n        <div\n          className={classnames(\n            'checkbox_container',\n            {\n              [`stroke_${color}`]: !checkedState,\n              [`fill_${color}`]: !checkedState,\n            },\n            {\n              [`stroke_${colorOn}`]: checkedState,\n              [`fill_${colorOn}`]: checkedState,\n            },\n          )}\n          data-component=\"checkbox_container\"\n        >\n          {iconType === 'square' ? (\n            <div\n              className={classnames(\n                'checkbox_icon_square',\n                {\n                  [`fill_${iconColor}`]: !checkedState,\n                },\n                {\n                  [`fill_${iconColorOn}`]: checkedState,\n                },\n              )}\n            />\n          ) : (\n            <CheckmarkIcon\n              className={classnames(\n                'checkbox_icon_checkmark',\n                {\n                  [`fill_${iconColor}`]: !checkedState,\n                },\n                {\n                  [`fill_${iconColorOn}`]: checkedState,\n                },\n              )}\n            />\n          )}\n        </div>\n        {labelPosition === 'right' ? this.renderLabel() : null}\n      </div>\n    );\n  }\n}\n\nexport default withAnalytics(Checkbox, 'onCheck');\n"]}