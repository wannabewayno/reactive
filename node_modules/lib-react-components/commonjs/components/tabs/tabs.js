'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _analytics_hoc = require('../../containers/analytics_hoc');

var _analytics_hoc2 = _interopRequireDefault(_analytics_hoc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * Tabs component
 */
var Tabs = function (_PureComponent) {
  _inherits(Tabs, _PureComponent);

  function Tabs(props) {
    _classCallCheck(this, Tabs);

    var _this = _possibleConstructorReturn(this, (Tabs.__proto__ || Object.getPrototypeOf(Tabs)).call(this, props));

    _this.handleChange = function (e, val) {
      var _this$props = _this.props,
          value = _this$props.value,
          onChange = _this$props.onChange;
      var valueState = _this.state.value;

      // Use `value` from props for check

      if (typeof value === 'number' || value.length > 0) {
        if (value !== val) {
          return onChange(e, val);
        }
      }

      // Use `value` from state for check
      if (valueState !== val) {
        onChange(e, val);
      }

      return _this.setValue(val);
    };

    var defaultValue = props.defaultValue;

    if (typeof props.value === 'number' || props.value.length > 0) {
      defaultValue = props.value;
    }

    _this.state = {
      value: defaultValue
    };
    return _this;
  }

  _createClass(Tabs, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var value = this.props.value;


      if (value !== nextProps.value) {
        this.setState({
          value: nextProps.value
        });
      }
    }

    /**
     * Set value to component state
     * @param {string} value
     */

  }, {
    key: 'setValue',
    value: function setValue(value) {
      this.setState({
        value: value
      });
    }

    /**
     * Handler for tabs change event
     * @param {SytheticEvent} e
     * @param {string} val
     */

  }, {
    key: 'render',


    /**
     * render
     * @return {ReactElement} markup
     */
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          defaultValue = _props.defaultValue,
          value = _props.value,
          onChange = _props.onChange,
          color = _props.color,
          colorOn = _props.colorOn,
          align = _props.align,
          className = _props.className,
          other = _objectWithoutProperties(_props, ['children', 'defaultValue', 'value', 'onChange', 'color', 'colorOn', 'align', 'className']);

      var valueState = this.state.value;


      return _react2.default.createElement(
        'div',
        _extends({
          'data-component': 'tabs',
          'data-value': valueState,
          className: (0, _classnames2.default)(['text_' + align], className)
        }, other),
        _react.Children.map(children, function (child, index) {
          if (!(0, _react.isValidElement)(child)) {
            return null;
          }

          return (0, _react.cloneElement)(child, {
            key: index,
            selected: valueState === child.props.value,
            onClick: _this2.handleChange,
            color: color,
            colorOn: colorOn
          });
        })
      );
    }
  }]);

  return Tabs;
}(_react.PureComponent);

Tabs.propTypes = {
  /**
   * The contents of the Tabs
   */
  children: _propTypes2.default.node.isRequired,
  /**
   * The text string to use for the default tab selected
   */
  defaultValue: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
   * Makes Tabs controllable and selects the tab whose value prop matches this prop
   */
  value: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),
  /**
   * Callback function that is fired when the Tabs selected value changed
   */
  onChange: _propTypes2.default.func,
  /**
   * Component color from theme
   */
  color: _propTypes2.default.string,
  /**
   * Component checked color from theme
   */
  colorOn: _propTypes2.default.string,
  /**
   * Component content aligment
   */
  align: _propTypes2.default.oneOf(['left', 'center', 'right']),
  /**
   * The CSS class name of the root element
   */
  className: _propTypes2.default.string
};
Tabs.defaultProps = {
  defaultValue: '',
  value: '',
  onChange: function onChange() {},

  color: 'grey',
  colorOn: 'primary',
  align: 'center',
  className: ''
};
exports.default = (0, _analytics_hoc2.default)(Tabs, 'onChange');
//# sourceMappingURL=tabs.js.map