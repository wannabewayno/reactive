{"version":3,"sources":["../../../src/components/radio/radio.jsx"],"names":["Radio","onChange","e","props","target","value","onKeyUp","keyCode","label","labelPosition","labelProps","checked","disabled","name","inputProps","className","tabIndex","bgType","color","colorOn","iconColor","iconColorOn","other","renderLabel","PureComponent","propTypes","PropTypes","bool","string","func","oneOfType","object","number","oneOf","defaultProps","undefined"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;AAEA;;;IAGMA,K;;;;;;;;;;;;;;oLAkGJC,Q,GAAW,UAACC,CAAD,EAAO;AAAA,UACRD,QADQ,GACK,MAAKE,KADV,CACRF,QADQ;;;AAGhBA,eAASC,CAAT,EAAYA,EAAEE,MAAF,CAASC,KAArB;AACD,K,QAMDC,O,GAAU,UAACJ,CAAD,EAAO;AACf,UAAMK,UAAUL,EAAEK,OAAlB;;AAEA,UAAIA,YAAY,EAAhB,EAAoB;AAClB,cAAKN,QAAL,CAAcC,CAAd;AACD;AACF,K;;;AApBD;;;;;;AAUA;;;;;;;;;;AAYA;;;;kCAIc;AAAA,mBACiC,KAAKC,KADtC;AAAA,UACJK,KADI,UACJA,KADI;AAAA,UACGC,aADH,UACGA,aADH;AAAA,UACkBC,UADlB,UACkBA,UADlB;;;AAGZ,aAAOF,SACL;AAAC,4BAAD;AAAA;AACE,gBAAK,IADP;AAEE,iBAAM,OAFR;AAGE,qBAAU,aAHZ;AAIE,2BAAeC;AAJjB,WAKMC,UALN;AAOGF;AAPH,OADF;AAWD;;AAED;;;;;;;6BAIS;AAAA;;AAAA,oBAmBH,KAAKL,KAnBF;AAAA,UAELQ,OAFK,WAELA,OAFK;AAAA,UAGLC,QAHK,WAGLA,QAHK;AAAA,UAILC,IAJK,WAILA,IAJK;AAAA,UAKLR,KALK,WAKLA,KALK;AAAA,UAMLJ,QANK,WAMLA,QANK;AAAA,UAOLa,UAPK,WAOLA,UAPK;AAAA,UAQLN,KARK,WAQLA,KARK;AAAA,UASLC,aATK,WASLA,aATK;AAAA,UAULC,UAVK,WAULA,UAVK;AAAA,UAWLK,SAXK,WAWLA,SAXK;AAAA,UAYLC,QAZK,WAYLA,QAZK;AAAA,UAaLC,MAbK,WAaLA,MAbK;AAAA,UAcLC,KAdK,WAcLA,KAdK;AAAA,UAeLC,OAfK,WAeLA,OAfK;AAAA,UAgBLC,SAhBK,WAgBLA,SAhBK;AAAA,UAiBLC,WAjBK,WAiBLA,WAjBK;AAAA,UAkBFC,KAlBE;;AAqBP,aACE;AAAA;AAAA;AACE,4BAAe,OADjB;AAEE,uBAAWL,MAFb;AAGE,0BAAcN,OAHhB;AAIE,2BAAeC,QAJjB;AAKE,qBAAW,0BACT,OADS,EAETG,SAFS;AALb,WASMO,KATN;AAWE,4DACMR,UADN;AAEE,oBAAUE,QAFZ;AAGE,gBAAK,OAHP;AAIE,gBAAMH,IAJR;AAKE,iBAAOR,KALT;AAME,qBAAU,aANZ;AAOE,oBAAU,KAAKJ,QAPjB;AAQE,mBAAS,KAAKK,OARhB;AASE,oBAAUM,QATZ;AAUE,mBAASD;AAVX,WAXF;AAuBGF,0BAAkB,MAAlB,GAA2B,KAAKc,WAAL,EAA3B,GAAgD,IAvBnD;AAwBE;AAAA;AAAA;AACE,uBAAW,0BACT,iBADS,8DAGIJ,OAHJ,EAGgBR,OAHhB,0CAIEQ,OAJF,EAIcR,OAJd,+EAOIO,KAPJ,EAOc,CAACP,OAPf,2CAQEO,KARF,EAQY,CAACP,OARb,iBADb;AAYE,8BAAe;AAZjB;AAcE;AACE,uBAAW,0BACT,eADS,gCAGES,SAHF,EAGgB,CAACT,OAHjB,iCAMEU,WANF,EAMkBV,OANlB;AADb;AAdF,SAxBF;AAkDGF,0BAAkB,OAAlB,GAA4B,KAAKc,WAAL,EAA5B,GAAiD;AAlDpD,OADF;AAsDD;;;;EAvNiBC,oB;;AAAdxB,K,CACGyB,S,GAAY;AACjB;;;AAGAd,WAASe,oBAAUC,IAJF;AAKjB;;;AAGAf,YAAUc,oBAAUC,IARH;AASjB;;;AAGAd,QAAMa,oBAAUE,MAZC;AAajB;;;AAGAvB,SAAOqB,oBAAUE,MAhBA;AAiBjB;;;AAGA3B,YAAUyB,oBAAUG,IApBH;AAqBjB;;;AAGAf,cAAYY,oBAAUI,SAAV,CAAoB,CAC9BJ,oBAAUK,MADoB,CAApB,CAxBK;AA2BjB;;;AAGAvB,SAAOkB,oBAAUI,SAAV,CAAoB,CACzBJ,oBAAUE,MADe,EAEzBF,oBAAUM,MAFe,CAApB,CA9BU;AAkCjB;;;AAGAvB,iBAAeiB,oBAAUO,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CArCE;AAsCjB;;;AAGAvB,cAAYgB,oBAAUK,MAzCL,EAyCa;AAC9B;;;AAGAhB,aAAWW,oBAAUE,MA7CJ;AA8CjB;;;AAGAZ,YAAUU,oBAAUM,MAjDH;AAkDjB;;;;;AAKAf,UAAQS,oBAAUO,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,CAAhB,CAvDS;AAwDjB;;;AAGAf,SAAOQ,oBAAUE,MA3DA;AA4DjB;;;AAGAT,WAASO,oBAAUE,MA/DF;AAgEjB;;;AAGAR,aAAWM,oBAAUE,MAnEJ;AAoEjB;;;AAGAP,eAAaK,oBAAUE;AAvEN,C;AADf5B,K,CA2EGkC,Y,GAAe;AACpBvB,WAAS,KADW;AAEpBC,YAAU,KAFU;AAGpBC,QAAMsB,SAHc;AAIpB9B,SAAO8B,SAJa;AAKpBlC,UALoB,sBAKT,CAAE,CALO;;AAMpBa,cAAY,EANQ;AAOpBN,SAAO2B,SAPa;AAQpB1B,iBAAe,MARK;AASpBC,cAAY,EATQ;AAUpBK,aAAW,EAVS;AAWpBC,YAAU,CAXU;AAYpBC,UAAQ,MAZY;AAapBC,SAAO,YAba;AAcpBC,WAAS,SAdW;AAepBC,aAAW,MAfS;AAgBpBC,eAAa;AAhBO,C;kBA+IT,6BAAcrB,KAAd,EAAqB,UAArB,C","file":"radio.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withAnalytics from '../../containers/analytics_hoc';\nimport Typography from '../typography';\n\n/**\n * Radio component\n */\nclass Radio extends PureComponent {\n  static propTypes = {\n    /**\n     * If true, the component is checked\n     */\n    checked: PropTypes.bool,\n    /**\n     * If true, the component will be disabled\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Name attribute for component\n     */\n    name: PropTypes.string,\n    /**\n     * The value of the component\n     */\n    value: PropTypes.string,\n    /**\n     * Callback fired when the state is changed\n     */\n    onChange: PropTypes.func,\n    /**\n     * Properties for `<input type=\"radio\" />` element\n     */\n    inputProps: PropTypes.oneOfType([\n      PropTypes.object,\n    ]),\n    /**\n     * Label for radio\n     */\n    label: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * Where the label will be placed next to the radio\n     */\n    labelPosition: PropTypes.oneOf(['left', 'right']),\n    /**\n     * `Typography` props for label\n     */\n    labelProps: PropTypes.object, // eslint-disable-line\n    /**\n     * The CSS class name of the root element\n     */\n    className: PropTypes.string,\n    /**\n     * The tabIndex of the root element\n     */\n    tabIndex: PropTypes.number,\n    /**\n     * Component type one of `fill` or `stroke`.\n     * If `fill` - component will be have background-color from `color` props.\n     * If `stroke` - component will be have border-color from `color` props.\n     */\n    bgType: PropTypes.oneOf(['fill', 'stroke']),\n    /**\n     * Component color from theme\n     */\n    color: PropTypes.string,\n    /**\n     * Component checked color from theme\n     */\n    colorOn: PropTypes.string,\n    /**\n     * Component icon color from theme\n     */\n    iconColor: PropTypes.string,\n    /**\n     * Component checked icon color from theme\n     */\n    iconColorOn: PropTypes.string,\n  };\n\n  static defaultProps = {\n    checked: false,\n    disabled: false,\n    name: undefined,\n    value: undefined,\n    onChange() {},\n    inputProps: {},\n    label: undefined,\n    labelPosition: 'left',\n    labelProps: {},\n    className: '',\n    tabIndex: 0,\n    bgType: 'fill',\n    color: 'light_grey',\n    colorOn: 'primary',\n    iconColor: 'grey',\n    iconColorOn: 'white',\n  };\n\n  /**\n   * onChange handler\n   * @param {SytheticEvent} e\n   */\n  onChange = (e) => {\n    const { onChange } = this.props;\n\n    onChange(e, e.target.value);\n  };\n\n  /**\n   * onKeyUp handler\n   * @param {SytheticEvent} e\n   */\n  onKeyUp = (e) => {\n    const keyCode = e.keyCode;\n\n    if (keyCode === 13) {\n      this.onChange(e);\n    }\n  };\n\n  /**\n   * renderLabel\n   * @return {ReactElement} markup\n   */\n  renderLabel() {\n    const { label, labelPosition, labelProps } = this.props;\n\n    return label && (\n      <Typography\n        type=\"b2\"\n        color=\"black\"\n        className=\"radio_label\"\n        data-position={labelPosition}\n        {...labelProps}\n      >\n        {label}\n      </Typography>\n    );\n  }\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const {\n      checked,\n      disabled,\n      name,\n      value,\n      onChange,\n      inputProps,\n      label,\n      labelPosition,\n      labelProps,\n      className,\n      tabIndex,\n      bgType,\n      color,\n      colorOn,\n      iconColor,\n      iconColorOn,\n      ...other\n    } = this.props;\n\n    return (\n      <div\n        data-component=\"radio\"\n        data-type={bgType}\n        data-checked={checked}\n        data-disabled={disabled}\n        className={classNames(\n          'radio',\n          className,\n        )}\n        {...other}\n      >\n        <input\n          {...inputProps}\n          tabIndex={tabIndex}\n          type=\"radio\"\n          name={name}\n          value={value}\n          className=\"radio_input\"\n          onChange={this.onChange}\n          onKeyUp={this.onKeyUp}\n          disabled={disabled}\n          checked={checked}\n        />\n        {labelPosition === 'left' ? this.renderLabel() : null}\n        <div\n          className={classNames(\n            'radio_container',\n            {\n              [`stroke_${colorOn}`]: checked,\n              [`fill_${colorOn}`]: checked,\n            },\n            {\n              [`stroke_${color}`]: !checked,\n              [`fill_${color}`]: !checked,\n            },\n          )}\n          data-component=\"radio_container\"\n        >\n          <div\n            className={classNames(\n              'radio_tumbler',\n              {\n                [`fill_${iconColor}`]: !checked,\n              },\n              {\n                [`fill_${iconColorOn}`]: checked,\n              },\n            )}\n          />\n        </div>\n        {labelPosition === 'right' ? this.renderLabel() : null}\n      </div>\n    );\n  }\n}\n\nexport default withAnalytics(Radio, 'onChange');\n"]}