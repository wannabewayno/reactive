{"version":3,"sources":["../../../src/components/select/select.jsx"],"names":["prepareValue","value","defaultValue","Select","state","open","props","valueSelected","getValue","inputNode","setValue","setState","_blurTimeout","_childrenValues","dropdownNode","_handleItemClick","e","onChange","name","valueChild","child","_handleClick","disabled","_handleItemHovered","_handleFocus","onFocus","clearTimeout","_handleBlur","onBlur","setTimeout","bind","_handleKeyDown","event","onKeyDown","keyCode","preventDefault","_handleSpaceEnterPress","nextProps","type","_handleScrollToElement","valueIndex","indexOf","prevValue","nextValue","scrollToFocusedElement","arrowComponent","native","children","multiple","tabIndex","className","placeholder","inputProps","bgType","color","textColor","colorFocus","propsSize","size","mobileSize","placement","placeholderColor","other","valueState","device","context","defaultProps","node","target","_renderOpenButton","displayValue","options","Children","map","childrenChild","disabledChild","selected","push","onClick","hasFocus","mustOpen","length","Object","assign","Component","propTypes","PropTypes","isRequired","bool","string","oneOfType","number","func","object","oneOf","contextTypes","undefined"],"mappings":"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","file":"select.js","sourcesContent":["import React, { Component, Children, cloneElement, isValidElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport SelectDropdown from './select_dropdown';\nimport withAnalytics from '../../containers/analytics_hoc';\nimport SelectArrowIcon from '../icons/select_arrow';\n\nfunction prepareValue(value, defaultValue) {\n  if (value || typeof value === 'number') {\n    return value;\n  }\n\n  if (defaultValue || typeof defaultValue === 'number') {\n    return defaultValue;\n  }\n\n  return '';\n}\n\n/**\n * Select component\n */\nclass Select extends Component {\n  static propTypes = {\n    /**\n     * The option elements to populate the select with.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * If true, the component will be using a native select element.\n     */\n    native: PropTypes.bool,\n    /**\n     * The input/select name value.\n     */\n    name: PropTypes.string,\n    /**\n     * If true, the select will be disabled.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * The input/select value.\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * The input/select default value.\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * Callback function fired when a menu item is selected.\n     */\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    /**\n     * Element tabIndex.\n     */\n    tabIndex: PropTypes.number,\n    /**\n     * Classname for the root element.\n     */\n    className: PropTypes.string,\n    /**\n     * The short hint displayed in the input before\n     * the user enters a value (only for `native: false`)\n     */\n    placeholder: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * Color for placeholder\n     */\n    placeholderColor: PropTypes.string,\n    /**\n     * Properties applied to the input/select element.\n     */\n    inputProps: PropTypes.oneOfType([\n      PropTypes.object,\n    ]),\n    arrowComponent: PropTypes.node,\n    /**\n     * Component type one of `fill` or `stroke`.\n     * If `fill` - component will be have background-color from `color` props.\n     * If `stroke` - component will be have border-color from `color` props.\n     */\n    bgType: PropTypes.oneOf(['fill', 'stroke']),\n    /**\n     * Component color from theme.\n     */\n    color: PropTypes.string,\n    /**\n     * Component text color from theme.\n     */\n    textColor: PropTypes.string,\n    /**\n     * Component focus color from theme.\n     */\n    colorFocus: PropTypes.string,\n    /**\n     * Component size.\n     */\n    size: PropTypes.oneOf(['medium', 'large']),\n    /**\n     * Component size for mobile.\n     */\n    mobileSize: PropTypes.oneOf(['medium', 'large']),\n    /**\n     * Select dropdown opened place\n     */\n    placement: PropTypes.oneOf(['top', 'bottom']),\n  };\n\n  static contextTypes = {\n    device: PropTypes.object,\n  };\n\n  static defaultProps = {\n    native: false,\n    name: undefined,\n    disabled: false,\n    value: undefined,\n    defaultValue: undefined,\n    onChange() {},\n    onFocus() {},\n    onBlur() {},\n    onKeyDown() {},\n    tabIndex: 0,\n    className: '',\n    placeholder: undefined,\n    placeholderColor: 'grey_4',\n    inputProps: {},\n    arrowComponent: null,\n    bgType: 'fill',\n    color: 'light_grey',\n    textColor: 'black',\n    colorFocus: 'primary',\n    size: 'medium',\n    mobileSize: undefined,\n    placement: 'bottom',\n  };\n\n  state = {\n    open: false,\n    value: prepareValue(this.props.value, this.props.defaultValue),\n    valueSelected: null,\n  };\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = this.props;\n\n    if (value !== nextProps.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this._blurTimeout);\n  }\n\n  /**\n   * Get select value\n   * @return {string|number}\n   */\n  getValue = () => (\n    this.inputNode.value\n  );\n\n  /**\n   * Set select value\n   * @param {string|number} value\n   */\n  setValue = value => (\n    this.setState({\n      value,\n    })\n  )\n\n  _blurTimeout = null;\n  _childrenValues = [];\n  inputNode = null;\n  dropdownNode = null;\n\n  /**\n   * onClick select item handler\n   * @param {object} child\n   */\n  _handleItemClick = child => (e) => {\n    const { onChange, name, value } = this.props;\n    const valueChild = child.props.value;\n\n    if (value || value === valueChild) {\n      this.setState({\n        open: false,\n      });\n\n      if (value === valueChild) return;\n    } else {\n      this.setState({\n        value: valueChild,\n        open: false,\n      });\n    }\n\n    onChange(e, valueChild, name);\n  };\n\n  /**\n   * onClick select handler\n   */\n  _handleClick = () => {\n    const { disabled } = this.props;\n    const { open } = this.state;\n\n    if (disabled) return;\n\n    if (open) {\n      this.setState({\n        open: false,\n      });\n    } else {\n      this.setState({\n        open: true,\n      }, this._handleItemHovered);\n    }\n  };\n\n  /**\n   * onFocus select handler\n   * @param {SytheticEvent} e\n   */\n  _handleFocus = (e) => {\n    const { onFocus, name } = this.props;\n\n    clearTimeout(this._blurTimeout);\n    onFocus(e, name);\n  };\n\n  /**\n   * onBlur select handler\n   * @param {SytheticEvent} e\n   */\n  _handleBlur = (e) => {\n    const { onBlur, name } = this.props;\n\n    clearTimeout(this._blurTimeout);\n    this._blurTimeout = setTimeout(this.setState.bind(this, { open: false }), 0);\n    onBlur(e, name);\n  };\n\n  /**\n   * onSpaceEnterPress select handler\n   * @param {SytheticEvent} e\n   */\n  _handleSpaceEnterPress(e) {\n    const { value, name, onChange } = this.props;\n    const {\n      valueSelected,\n      open,\n    } = this.state;\n\n    if (open && valueSelected && !value) {\n      this.setState({\n        value: valueSelected,\n      });\n    }\n\n    if (open && valueSelected) {\n      onChange(e, valueSelected, name);\n    }\n\n    this._handleClick();\n  }\n\n  /**\n   * onKeyDown select handler\n   * @param {SytheticEvent} e\n   */\n  _handleKeyDown = (event) => {\n    const {\n      onKeyDown,\n      disabled,\n      name,\n    } = this.props;\n\n    if (!disabled) {\n      const { keyCode } = event;\n\n      /**\n       * escape key press\n       * hide dropdown list\n       */\n      if (keyCode === 27) {\n        this.setState({\n          open: false,\n        });\n      }\n\n      /**\n       * space or enter key press\n       * open/hide dropdown or select element in dropdown list\n       */\n      if (keyCode === 32 || keyCode === 13) {\n        event.preventDefault();\n        this._handleSpaceEnterPress(event);\n      }\n\n      /**\n       * up key press\n       * select prev element in dropdown list\n       */\n      if (keyCode === 38) {\n        event.preventDefault();\n        this._handleItemHovered('up');\n      }\n\n      /**\n       * down key press\n       * select next element in dropdown list\n       */\n      if (keyCode === 40) {\n        event.preventDefault();\n        this._handleItemHovered('down');\n      }\n    }\n\n    onKeyDown(event, name);\n  };\n\n  /**\n   * onSelectItemFocus handler\n   * @param {string|undefined} type\n   */\n  _handleItemHovered(type) {\n    const { valueSelected, open, value } = this.state;\n    const { _childrenValues } = this;\n\n    if (!open) return;\n\n    if (!type) {\n      if (value) {\n        this.setState({\n          valueSelected: value,\n        }, this._handleScrollToElement);\n      } else {\n        this.setState({\n          valueSelected: _childrenValues[0],\n        }, this._handleScrollToElement);\n      }\n\n      return;\n    }\n\n    const valueIndex = _childrenValues.indexOf(valueSelected);\n    const prevValue = _childrenValues[valueIndex - 1];\n    const nextValue = _childrenValues[valueIndex + 1];\n\n    if (type === 'up' && prevValue) {\n      this.setState({\n        valueSelected: prevValue,\n      }, this._handleScrollToElement);\n    }\n\n    if (type === 'down' && nextValue) {\n      this.setState({\n        valueSelected: nextValue,\n      }, this._handleScrollToElement);\n    }\n  }\n\n  /**\n   * Scroll to focused element\n   */\n  _handleScrollToElement() {\n    if (this.dropdownNode) {\n      this.dropdownNode.scrollToFocusedElement();\n    }\n  }\n\n  /**\n   * Render open button\n   * @return {ReactElement} markup\n   */\n  _renderOpenButton() {\n    const { arrowComponent } = this.props;\n\n    return (\n      <div className=\"select_open_button\">\n        {arrowComponent || <SelectArrowIcon className=\"select_arrow_icon\" />}\n      </div>\n    );\n  }\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const {\n      native,\n      children,\n      name,\n      disabled,\n      value,\n      defaultValue,\n      onChange,\n      onFocus,\n      onBlur,\n      onKeyDown,\n      multiple, // eslint-disable-line\n      tabIndex,\n      className,\n      placeholder,\n      inputProps,\n      arrowComponent,\n      bgType,\n      color,\n      textColor,\n      colorFocus,\n      size: propsSize,\n      mobileSize,\n      placement,\n      placeholderColor,\n      ...other\n    } = this.props;\n    const {\n      open,\n      value: valueState,\n      valueSelected,\n    } = this.state;\n    const { device } = this.context;\n\n    let size = propsSize || Select.defaultProps.size;\n\n    if (device && mobileSize) {\n      if (device.type === 'mobile') {\n        size = mobileSize;\n      }\n    }\n\n    if (native) {\n      return (\n        <div\n          data-component=\"select\"\n          data-type={bgType}\n          data-disabled={disabled}\n          className={classNames(\n            'select',\n            className,\n          )}\n          {...other}\n        >\n          <select\n            data-component=\"select_field\"\n            {...inputProps}\n            tabIndex={tabIndex}\n            multiple={false}\n            className={classNames(\n              'select_field',\n              'round_small',\n              [`select_field_${size}`],\n              [`select_field_focus_${colorFocus}`],\n              [`stroke_${color}`],\n              {\n                [`fill_${color}`]: bgType === 'fill',\n                fill_white: bgType === 'stroke',\n              },\n            )}\n            name={name}\n            disabled={disabled}\n            ref={(node) => { this.inputNode = node; }}\n            value={value}\n            defaultValue={defaultValue}\n            onChange={(e) => { onChange(e, e.target.value, name); }}\n            onFocus={(e) => { onFocus(e, name); }}\n            onBlur={(e) => { onBlur(e, name); }}\n            onKeyDown={(e) => { onKeyDown(e, name); }}\n          >\n            {children}\n          </select>\n          {this._renderOpenButton()}\n        </div>\n      );\n    }\n\n    this._childrenValues = [];\n    let displayValue = placeholder;\n\n    const options = Children.map(children, (child) => {\n      if (!isValidElement(child)) {\n        return null;\n      }\n\n      const {\n        value: valueChild,\n        children: childrenChild,\n        disabled: disabledChild,\n      } = child.props;\n      const selected = valueState === valueChild;\n\n      if (selected) {\n        displayValue = childrenChild;\n      }\n\n      if (!disabledChild) {\n        this._childrenValues.push(valueChild);\n      }\n\n      return cloneElement(child, {\n        onClick: disabledChild ? null : this._handleItemClick(child),\n        selected,\n        hasFocus: valueSelected === valueChild,\n        size,\n        textColor,\n        colorFocus,\n      });\n    });\n    const mustOpen = open && options && options.length > 0;\n\n    return (\n      <div\n        data-component=\"select\"\n        data-type={bgType}\n        data-disabled={disabled}\n        data-open={mustOpen}\n        data-placement={placement}\n        className={classNames(\n          'select',\n          className,\n        )}\n        onFocus={this._handleFocus}\n        onBlur={this._handleBlur}\n        onKeyDown={this._handleKeyDown}\n        {...other}\n        {...Object.assign(disabled ? {} : {\n          tabIndex,\n        })}\n      >\n        <div\n          data-component=\"select_field\"\n          className={classNames(\n            'select_field',\n            'truncate_text',\n            'round_small',\n            [`select_field_${size}`],\n            [`select_field_focus_${colorFocus}`],\n            [`stroke_${color}`],\n            {\n              [`fill_${color}`]: bgType === 'fill',\n              fill_white: bgType === 'stroke',\n            },\n          )}\n          onClick={this._handleClick}\n        >\n          <span\n            className={classNames({\n              [`text_${textColor}`]: valueState,\n              [`text_${placeholderColor}`]: !valueState,\n            })}\n          >\n            {displayValue}\n          </span>\n        </div>\n        <input\n          {...inputProps}\n          type=\"hidden\"\n          value={valueState}\n          name={name}\n          ref={(node) => { this.inputNode = node; }}\n          disabled={disabled}\n        />\n        {this._renderOpenButton()}\n        {(options && options.length > 0) && (\n          <SelectDropdown\n            className=\"select_dropdown\"\n            ref={(node) => { this.dropdownNode = node; }}\n            bgType={bgType}\n            color={color}\n            colorFocus={colorFocus}\n          >\n            {options}\n          </SelectDropdown>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default withAnalytics(Select, 'onChange');\n"]}