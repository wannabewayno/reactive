{"version":3,"sources":["../../src/utils/device_info.js"],"names":["getWindowSize","getElementSize","getWindowOrientation","getDeviceInfo","window","innerWidth","innerHeight","width","height","element","offsetWidth","offsetHeight","orientation","type"],"mappings":";;;;;QAGgBA,a,GAAAA,a;QAYAC,c,GAAAA,c;QAYAC,oB,GAAAA,oB;QAeAC,a,GAAAA,a;AA1ChB;;;AAGO,SAASH,aAAT,GAAyB;AAAA,gBACMI,MADN;AAAA,MACtBC,UADsB,WACtBA,UADsB;AAAA,MACVC,WADU,WACVA,WADU;;;AAG9B,SAAO;AACLC,WAAOF,UADF;AAELG,YAAQF;AAFH,GAAP;AAID;;AAED;;;AAGO,SAASL,cAAT,CAAwBQ,OAAxB,EAAiC;AAAA,MAC9BC,WAD8B,GACAD,OADA,CAC9BC,WAD8B;AAAA,MACjBC,YADiB,GACAF,OADA,CACjBE,YADiB;;;AAGtC,SAAO;AACLJ,WAAOG,WADF;AAELF,YAAQG;AAFH,GAAP;AAID;;AAED;;;AAGO,SAAST,oBAAT,GAAgC;AAAA,iBACbE,MADa;AAAA,MAC7BQ,WAD6B,YAC7BA,WAD6B;;;AAGrC,UAAQA,WAAR;AACE,SAAK,MAAM,CAAC,EAAZ;AACE,aAAO,WAAP;;AAEF;AACE,aAAO,UAAP;AALJ;AAOD;;AAED;;;AAGO,SAAST,aAAT,GAAyC;AAAA,MAAlBM,OAAkB,uEAARL,MAAQ;;AAAA,aAE5CK,YAAYL,MAAZ,GACIJ,eADJ,GAEIC,eAAeQ,OAAf,CAJwC;AAAA,MACtCF,KADsC,QACtCA,KADsC;AAAA,MAC/BC,MAD+B,QAC/BA,MAD+B;;AAK9C,MAAIK,OAAO,SAAX;;AAEA,MAAIN,SAAS,IAAT,IAAiBA,QAAQ,GAAzB,IAAgCC,SAAS,GAA7C,EAAkD;AAChDK,WAAO,QAAP;AACD,GAFD,MAEO,IAAIN,SAAS,GAAT,IAAiBA,SAAS,GAAT,IAAgBC,UAAU,GAA/C,EAAqD;AAC1DK,WAAO,QAAP;AACD;;AAED,SAAO;AACLN,gBADK;AAELC,kBAFK;AAGLK,cAHK;AAILD,iBAAaV;AAJR,GAAP;AAMD","file":"device_info.js","sourcesContent":["/**\n * Get window width and height\n */\nexport function getWindowSize() {\n  const { innerWidth, innerHeight } = window;\n\n  return {\n    width: innerWidth,\n    height: innerHeight,\n  };\n}\n\n/**\n * Get window width and height\n */\nexport function getElementSize(element) {\n  const { offsetWidth, offsetHeight } = element;\n\n  return {\n    width: offsetWidth,\n    height: offsetHeight,\n  };\n}\n\n/**\n * Get window orietation, depends on rotation angle\n */\nexport function getWindowOrientation() {\n  const { orientation } = window;\n\n  switch (orientation) {\n    case 90 || -90:\n      return 'landscape';\n\n    default:\n      return 'portrait';\n  }\n}\n\n/**\n * Get device type and sizes\n */\nexport function getDeviceInfo(element = window) {\n  const { width, height } =\n    element === window\n      ? getWindowSize()\n      : getElementSize(element);\n  let type = 'desktop';\n\n  if (width <= 1024 && width > 736 && height > 375) {\n    type = 'tablet';\n  } else if (width <= 736 || (width <= 812 && height <= 375)) {\n    type = 'mobile';\n  }\n\n  return {\n    width,\n    height,\n    type,\n    orientation: getWindowOrientation(),\n  };\n}\n"]}