{"version":3,"sources":["../../../src/utils/validator/reg_exps.js"],"names":["emotionsСharacterRanges","nonLetterСharacter","allowedNameСharacter","nameRegExp","RegExp","lettersRegExp","regExps","password","fullName","email","phone","number","text","letters","date","cert","hex","base64","objectID","url"],"mappings":";;;;;AAAA;;;;;;;;;;;;;;;;;;;AAmBA;AACA,IAAMA,0BAA0B,gFAAhC;AACA;AACA,IAAMC,qBAAqB,wCAA3B;AACA;AACA;AACA,IAAMC,uBAAuB,GAA7B;AACA,IAAMC,aAAa,IAAIC,MAAJ,WAAmBH,kBAAnB,GAAwCD,uBAAxC,aAAuEE,oBAAvE,sBAA4GD,kBAA5G,GAAiID,uBAAjI,aAAgKE,oBAAhK,UAA2L,GAA3L,CAAnB;AACA,IAAMG,gBAAgB,IAAID,MAAJ,UAAkBH,kBAAlB,GAAuCD,uBAAvC,gBAA0E,GAA1E,CAAtB;;AAEA,IAAMM,UAAU;AACdC,YAAU,qFADI;AAEdC,YAAUL,UAFI;AAGdM,SAAO,wJAHO,EAGmJ;AACjKC,SAAO,iBAJO;AAKdC,UAAQ,OALM;AAMdC,QAAM,MANQ;AAOdC,WAASR,aAPK;AAQdS,QAAM,sDARQ,EAQgD;AAC9DC,QAAM,sDATQ;AAUdC,OAAK,qCAVS;AAWdC,UAAQ,2GAXM,EAWuG;AACrHC,YAAU,uCAZI;AAadC,OAAK,mGAbS,CAa4F;AAb5F,CAAhB;;kBAgBeb,O","file":"reg_exps.js","sourcesContent":["/**\n * Basic RegExps\n * @type {{\n *  password: RegExp,\n *  name: RegExp,\n *  fullName: RegExp,\n *  email: RegExp,\n *  phone: RegExp,\n *  number: RegExp,\n *  text: RegExp,\n *  letters: RegExp,\n *  date: RegExp,\n *  cert: RegExp,\n *  hex: RegExp,\n *  base64: RegExp,\n *  objectID: RegExp\n * }}\n */\n\n// {emotionsСharacterRanges} - regex is a famous collection of emotions in forums. This is the most complete collection I've come across. You can test it here:  https://www.regextester.com/106421\nconst emotionsСharacterRanges = '\\u00a9\\u00ae\\u2000-\\u3300\\ud83c\\ud000-\\udfff\\ud83d\\ud000-\\udfff\\ud83e\\ud000-\\udfff';\n// {nonLetterСharacter} - collection of non-symbolic values. Collected based on the Unicode table https://unicode-table.com/en/#control-character\nconst nonLetterСharacter = '\\u0021-\\u0040\\u005B-\\u0060\\u007B-\\u00BF\\u02B9-\\u0362\\u1FFD-\\u2BFF';\n// {allowedNameСharacter} - a line where you can add characters that are not letters but are valid\n// in letter expressions. Created to avoid adding complex exceptions.\nconst allowedNameСharacter = \"'\";\nconst nameRegExp = new RegExp(`^(([^${nonLetterСharacter}${emotionsСharacterRanges}\\\\s]|${allowedNameСharacter})+(\\\\s|-))*([^${nonLetterСharacter}${emotionsСharacterRanges}\\\\s]|${allowedNameСharacter})+$`, 'i');\nconst lettersRegExp = new RegExp(`^([^${nonLetterСharacter}${emotionsСharacterRanges}\\\\s'])+$`, 'i');\n\nconst regExps = {\n  password: /^^(?=.*[0-9])(?=.*[a-zа-я])(?=.*[A-ZА-Я])[A-zА-я0-9!@#$%^&*()-=§±|'\";:~,.<>/?]{8,}$/,\n  fullName: nameRegExp,\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/, // eslint-disable-line\n  phone: /^(\\+?(\\d){12})$/,\n  number: /^\\d+$/,\n  text: /^.+$/,\n  letters: lettersRegExp,\n  date: /^\\d{4}\\-(0?[1-9]|1[012])\\-(0?[1-9]|[12][0-9]|3[01])$/, // eslint-disable-line\n  cert: /(-----(BEGIN|END) CERTIFICATE( REQUEST|)-----|\\r|\\n)/,\n  hex: /^\\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\\s*)+$/,\n  base64: /-----BEGIN [^-]+-----([A-Za-z0-9+\\/=\\s]+)-----END [^-]+-----|begin-base64[^\\n]+\\n([A-Za-z0-9+\\/=\\s]+)====/, // eslint-disable-line\n  objectID: /^(?=[a-f\\d]{24}$)(\\d+[a-f]|[a-f]+\\d)/i,\n  url: /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/, // eslint-disable-line\n};\n\nexport default regExps;\n"]}