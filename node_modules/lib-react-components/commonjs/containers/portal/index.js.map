{"version":3,"sources":["../../../src/containers/portal/index.jsx"],"names":["ownerDocument","node","document","getContainer","container","defaultContainer","ReactDOM","findDOMNode","getOwnerDocument","element","Portal","getMountNode","mountNode","props","onRendered","setContainer","forceUpdate","prevProps","body","children","createPortal","Component","propTypes","PropTypes","isRequired","oneOfType","object","func","instanceOf","HTMLElement","defaultProps"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;+eAHA;AAC0C;;;AAI1C,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAQA,QAAQA,KAAKD,aAAd,IAAgCE,QAAvC;AACD;;AAED,SAASC,YAAT,CAAsBC,SAAtB,EAAiCC,gBAAjC,EAAmD;AACjDD,cAAY,OAAOA,SAAP,KAAqB,UAArB,GAAkCA,WAAlC,GAAgDA,SAA5D;;AAEA,SAAOE,mBAASC,WAAT,CAAqBH,SAArB,KAAmCC,gBAA1C;AACD;;AAED,SAASG,gBAAT,CAA0BC,OAA1B,EAAmC;AACjC,SAAOT,cAAcM,mBAASC,WAAT,CAAqBE,OAArB,CAAd,CAAP;AACD;;AAED;;;;IAGqBC,M;;;;;;;;;;;;;;sLAmDnBC,Y,GAAe;AAAA,aAAM,MAAKC,SAAX;AAAA,K;;;;;wCAxBK;AAAA,mBACgB,KAAKC,KADrB;AAAA,UACVT,SADU,UACVA,SADU;AAAA,UACCU,UADD,UACCA,UADD;;;AAGlB,WAAKC,YAAL,CAAkBX,SAAlB;AACA,WAAKY,WAAL,CAAiBF,UAAjB;AACD;;;uCAEkBG,S,EAAW;AAAA,UACpBb,SADoB,GACN,KAAKS,KADC,CACpBT,SADoB;;;AAG5B,UAAIa,UAAUb,SAAV,KAAwBA,SAA5B,EAAuC;AACrC,aAAKW,YAAL,CAAkBX,SAAlB;AACA,aAAKY,WAAL;AACD;AACF;;;2CAEsB;AACrB,WAAKJ,SAAL,GAAiB,IAAjB;AACD;;;iCAEYR,S,EAAW;AACtB,WAAKQ,SAAL,GAAiBT,aAAaC,SAAb,EAAwBI,iBAAiB,IAAjB,EAAuBU,IAA/C,CAAjB;AACD;;;6BAIQ;AAAA,UACCC,QADD,GACc,KAAKN,KADnB,CACCM,QADD;;;AAGP,aAAO,KAAKP,SAAL,GAAiBN,mBAASc,YAAT,CAAsBD,QAAtB,EAAgC,KAAKP,SAArC,CAAjB,GAAmE,IAA1E;AACD;;;;EAzDiCS,gB;;AAAfX,M,CACZY,S,GAAY;AACjB;;;AAGAH,YAAUI,oBAAUtB,IAAV,CAAeuB,UAJR;AAKjB;;;;;;AAMApB,aAAWmB,oBAAUE,SAAV,CAAoB,CAAE;AAC/BF,sBAAUG,MADmB,EAE7BH,oBAAUI,IAFmB,EAG7BJ,oBAAUK,UAAV,CAAqBC,WAArB,CAH6B,CAApB,CAXM;AAgBjB;;;AAGAf,cAAYS,oBAAUI;AAnBL,C;AADAjB,M,CAuBZoB,Y,GAAe;AACpBhB,YADoB,wBACP,CAAE;AADK,C;kBAvBHJ,M","file":"index.js","sourcesContent":["/* eslint react/no-find-dom-node: 1 */\nimport React, { Component } from 'react'; // eslint-disable-line\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nfunction ownerDocument(node) {\n  return (node && node.ownerDocument) || document;\n}\n\nfunction getContainer(container, defaultContainer) {\n  container = typeof container === 'function' ? container() : container;\n\n  return ReactDOM.findDOMNode(container) || defaultContainer;\n}\n\nfunction getOwnerDocument(element) {\n  return ownerDocument(ReactDOM.findDOMNode(element));\n}\n\n/**\n * Portal component\n */\nexport default class Portal extends Component {\n  static propTypes = {\n    /**\n     * The children to render into the `container`.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * A node, component instance, or function that returns either.\n     * The `container` will have the portal children appended to it.\n     * By default, it uses the body of the top-level document object,\n     * so it's simply `document.body` most of the time.\n     */\n    container: PropTypes.oneOfType([ // eslint-disable-line\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.instanceOf(HTMLElement),\n    ]),\n    /**\n     * Callback fired once the children has been mounted into the `container`.\n     */\n    onRendered: PropTypes.func,\n  };\n\n  static defaultProps = {\n    onRendered() {},\n  };\n\n  componentDidMount() {\n    const { container, onRendered } = this.props;\n\n    this.setContainer(container);\n    this.forceUpdate(onRendered);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { container } = this.props;\n\n    if (prevProps.container !== container) {\n      this.setContainer(container);\n      this.forceUpdate();\n    }\n  }\n\n  componentWillUnmount() {\n    this.mountNode = null;\n  }\n\n  setContainer(container) {\n    this.mountNode = getContainer(container, getOwnerDocument(this).body);\n  }\n\n  getMountNode = () => this.mountNode;\n\n  render() {\n    const { children } = this.props;\n\n    return this.mountNode ? ReactDOM.createPortal(children, this.mountNode) : null;\n  }\n}\n"]}