{"version":3,"sources":["../../../src/containers/device_provider/index.jsx"],"names":["DeviceProvider","state","device","props","rootElement","bindedResize","onResize","bind","window","addEventListener","removeEventListener","setState","children","PureComponent","propTypes","PropTypes","node","instanceOf","HTMLElement","childContextTypes","object","defaultProps","undefined"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;+eAF8C;;;AAI9C;;;IAGqBA,c;;;;;;;;;;;;;;sMAqBnBC,K,GAAQ;AACNC,cAAQ,gCAAc,MAAKC,KAAL,CAAWC,WAAzB;AADF,K,QA2BRC,Y,GAAe,MAAKC,QAAL,CAAcC,IAAd,O;;;;;sCAvBG;AAChB,aAAO;AACLL,gBAAQ,KAAKD,KAAL,CAAWC;AADd,OAAP;AAGD;;;wCAEmB;AAClBM,aAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,YAAvC;AACD;;;2CAEsB;AACrBG,aAAOE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,YAA1C;AACD;;AAED;;;;;;+BAGW;AACT,WAAKM,QAAL,CAAc;AACZT,gBAAQ,gCAAc,KAAKC,KAAL,CAAWC,WAAzB;AADI,OAAd;AAGD;;;;;AAID;;;;6BAIS;AACP,aAAO,KAAKD,KAAL,CAAWS,QAAlB;AACD;;;;EAxDyCC,oB;;AAAvBb,c,CACZc,S,GAAY;AACjB;;;AAGAF,YAAUG,oBAAUC,IAJH;AAKjB;;;AAGAZ,eAAaW,oBAAUE,UAAV,CAAqBC,WAArB;AARI,C;AADAlB,c,CAYZmB,iB,GAAoB;AACzBjB,UAAQa,oBAAUK;AADO,C;AAZRpB,c,CAgBZqB,Y,GAAe;AACpBT,YAAU,IADU;AAEpBR,eAAakB;AAFO,C;kBAhBHtB,c","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\nimport { getDeviceInfo } from '../../utils/device_info';\n\n/**\n * DeviceProvider component\n */\nexport default class DeviceProvider extends PureComponent {\n  static propTypes = {\n    /**\n     * This is what will be displayed inside the DeviceProvider\n     */\n    children: PropTypes.node,\n    /**\n     * The root where app is rendered\n     */\n    rootElement: PropTypes.instanceOf(HTMLElement),\n  };\n\n  static childContextTypes = {\n    device: PropTypes.object,\n  };\n\n  static defaultProps = {\n    children: null,\n    rootElement: undefined,\n  };\n\n  state = {\n    device: getDeviceInfo(this.props.rootElement),\n  };\n\n  getChildContext() {\n    return {\n      device: this.state.device,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.bindedResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.bindedResize);\n  }\n\n  /**\n   * onResize window handler\n   */\n  onResize() {\n    this.setState({\n      device: getDeviceInfo(this.props.rootElement),\n    });\n  }\n\n  bindedResize = this.onResize.bind(this);\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    return this.props.children;\n  }\n}\n"]}