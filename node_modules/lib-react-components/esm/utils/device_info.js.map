{"version":3,"sources":["../../src/utils/device_info.js"],"names":["getWindowSize","window","innerWidth","innerHeight","width","height","getElementSize","element","offsetWidth","offsetHeight","getWindowOrientation","orientation","getDeviceInfo","type"],"mappings":"AAAA;;;AAGA,OAAO,SAASA,aAAT,GAAyB;AAAA,gBACMC,MADN;AAAA,MACtBC,UADsB,WACtBA,UADsB;AAAA,MACVC,WADU,WACVA,WADU;;;AAG9B,SAAO;AACLC,WAAOF,UADF;AAELG,YAAQF;AAFH,GAAP;AAID;;AAED;;;AAGA,OAAO,SAASG,cAAT,CAAwBC,OAAxB,EAAiC;AAAA,MAC9BC,WAD8B,GACAD,OADA,CAC9BC,WAD8B;AAAA,MACjBC,YADiB,GACAF,OADA,CACjBE,YADiB;;;AAGtC,SAAO;AACLL,WAAOI,WADF;AAELH,YAAQI;AAFH,GAAP;AAID;;AAED;;;AAGA,OAAO,SAASC,oBAAT,GAAgC;AAAA,iBACbT,MADa;AAAA,MAC7BU,WAD6B,YAC7BA,WAD6B;;;AAGrC,UAAQA,WAAR;AACE,SAAK,MAAM,CAAC,EAAZ;AACE,aAAO,WAAP;;AAEF;AACE,aAAO,UAAP;AALJ;AAOD;;AAED;;;AAGA,OAAO,SAASC,aAAT,GAAyC;AAAA,MAAlBL,OAAkB,uEAARN,MAAQ;;AAAA,aAE5CM,YAAYN,MAAZ,GACID,eADJ,GAEIM,eAAeC,OAAf,CAJwC;AAAA,MACtCH,KADsC,QACtCA,KADsC;AAAA,MAC/BC,MAD+B,QAC/BA,MAD+B;;AAK9C,MAAIQ,OAAO,SAAX;;AAEA,MAAIT,SAAS,IAAT,IAAiBA,QAAQ,GAAzB,IAAgCC,SAAS,GAA7C,EAAkD;AAChDQ,WAAO,QAAP;AACD,GAFD,MAEO,IAAIT,SAAS,GAAT,IAAiBA,SAAS,GAAT,IAAgBC,UAAU,GAA/C,EAAqD;AAC1DQ,WAAO,QAAP;AACD;;AAED,SAAO;AACLT,gBADK;AAELC,kBAFK;AAGLQ,cAHK;AAILF,iBAAaD;AAJR,GAAP;AAMD","file":"device_info.js","sourcesContent":["/**\n * Get window width and height\n */\nexport function getWindowSize() {\n  const { innerWidth, innerHeight } = window;\n\n  return {\n    width: innerWidth,\n    height: innerHeight,\n  };\n}\n\n/**\n * Get window width and height\n */\nexport function getElementSize(element) {\n  const { offsetWidth, offsetHeight } = element;\n\n  return {\n    width: offsetWidth,\n    height: offsetHeight,\n  };\n}\n\n/**\n * Get window orietation, depends on rotation angle\n */\nexport function getWindowOrientation() {\n  const { orientation } = window;\n\n  switch (orientation) {\n    case 90 || -90:\n      return 'landscape';\n\n    default:\n      return 'portrait';\n  }\n}\n\n/**\n * Get device type and sizes\n */\nexport function getDeviceInfo(element = window) {\n  const { width, height } =\n    element === window\n      ? getWindowSize()\n      : getElementSize(element);\n  let type = 'desktop';\n\n  if (width <= 1024 && width > 736 && height > 375) {\n    type = 'tablet';\n  } else if (width <= 736 || (width <= 812 && height <= 375)) {\n    type = 'mobile';\n  }\n\n  return {\n    width,\n    height,\n    type,\n    orientation: getWindowOrientation(),\n  };\n}\n"]}