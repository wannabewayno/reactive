{"version":3,"sources":["../../src/utils/adapt_shell.js"],"names":["getDeviceInfo","AdaptShell","root","listener","onResize","bind","nodes","document","body","currentType","type","window","addEventListener","searchForNodes","nodesMobile","querySelectorAll","nodesTablet","Array","prototype","slice","call","concat","i","length","dataset","classnamemobile","className","classnametablet","classnamedesktop","processClasses","removeEventListener"],"mappings":";;;;AAAA,SAASA,aAAT,QAA8B,eAA9B;;AAEA;;;;IAGqBC,U;AACnB;;;AAGA,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,QAAL,GAAgB,KAAKC,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKJ,IAAL,GAAYA,QAAQK,SAASC,IAA7B;AACA,SAAKC,WAAL,GAAmBT,gBAAgBU,IAAnC;AACAC,WAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKT,QAAvC;AACA,SAAKU,cAAL;AACA,SAAKT,QAAL;AACD;;;;qCAEgB;AACf,UAAMU,cAAc,KAAKZ,IAAL,CAAUa,gBAAV,CAA2B,wBAA3B,CAApB;AACA,UAAMC,cAAc,KAAKd,IAAL,CAAUa,gBAAV,CAA2B,wBAA3B,CAApB;;AAEA,WAAKT,KAAL,GAAaW,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BN,WAA3B,EACVO,MADU,CACHJ,MAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BJ,WAA3B,CADG,CAAb;AAED;;;qCAEgB;AACf,WAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAI,KAAKhB,KAAL,CAAWiB,MAA/B,EAAuCD,KAAK,CAA5C,EAA+C;AAC7C,YAAI,KAAKhB,KAAL,CAAWgB,CAAX,CAAJ,EAAmB;AACjB,cAAI,KAAKb,WAAL,KAAqB,QAArB,IAAiC,KAAKH,KAAL,CAAWgB,CAAX,EAAcE,OAAd,CAAsBC,eAA3D,EAA4E;AAC1E,iBAAKnB,KAAL,CAAWgB,CAAX,EAAcI,SAAd,GAA0B,KAAKpB,KAAL,CAAWgB,CAAX,EAAcE,OAAd,CAAsBC,eAAhD;AACD,WAFD,MAEO,IAAI,KAAKhB,WAAL,KAAqB,QAArB,IAAiC,KAAKH,KAAL,CAAWgB,CAAX,EAAcE,OAAd,CAAsBG,eAA3D,EAA4E;AACjF,iBAAKrB,KAAL,CAAWgB,CAAX,EAAcI,SAAd,GAA0B,KAAKpB,KAAL,CAAWgB,CAAX,EAAcE,OAAd,CAAsBG,eAAhD;AACD,WAFM,MAEA;AACL,iBAAKrB,KAAL,CAAWgB,CAAX,EAAcI,SAAd,GAA0B,KAAKpB,KAAL,CAAWgB,CAAX,EAAcE,OAAd,CAAsBI,gBAAhD;AACD;AACF;AACF;AACF;;;+BAEU;AAAA,2BACQ5B,eADR;AAAA,UACDU,IADC,kBACDA,IADC;;AAGT,UAAIA,SAAS,KAAKD,WAAlB,EAA+B;AAC7B,aAAKA,WAAL,GAAmBC,IAAnB;AACA,aAAKG,cAAL;AACA,aAAKgB,cAAL;AACD;AACF;;;8BAES;AACRlB,aAAOmB,mBAAP,CAA2B,QAA3B,EAAqC,KAAK3B,QAA1C;AACA,WAAKG,KAAL,GAAa,EAAb;AACD;;;;;;eAjDkBL,U","file":"adapt_shell.js","sourcesContent":["import { getDeviceInfo } from './device_info';\n\n/**\n * Search and control elements class-es using data attributes.\n */\nexport default class AdaptShell {\n  /**\n   * @param {HTMLElement} [root] - root where to search the elements, default: body\n   */\n  constructor(root) {\n    this.listener = this.onResize.bind(this);\n    this.nodes = [];\n    this.root = root || document.body;\n    this.currentType = getDeviceInfo().type;\n    window.addEventListener('resize', this.listener);\n    this.searchForNodes();\n    this.onResize();\n  }\n\n  searchForNodes() {\n    const nodesMobile = this.root.querySelectorAll('[data-classnamemobile]');\n    const nodesTablet = this.root.querySelectorAll('[data-classnametablet]');\n\n    this.nodes = Array.prototype.slice.call(nodesMobile)\n      .concat(Array.prototype.slice.call(nodesTablet));\n  }\n\n  processClasses() {\n    for (let i = 0; i < this.nodes.length; i += 1) {\n      if (this.nodes[i]) {\n        if (this.currentType === 'mobile' && this.nodes[i].dataset.classnamemobile) {\n          this.nodes[i].className = this.nodes[i].dataset.classnamemobile;\n        } else if (this.currentType === 'tablet' && this.nodes[i].dataset.classnametablet) {\n          this.nodes[i].className = this.nodes[i].dataset.classnametablet;\n        } else {\n          this.nodes[i].className = this.nodes[i].dataset.classnamedesktop;\n        }\n      }\n    }\n  }\n\n  onResize() {\n    const { type } = getDeviceInfo();\n\n    if (type !== this.currentType) {\n      this.currentType = type;\n      this.searchForNodes();\n      this.processClasses();\n    }\n  }\n\n  destroy() {\n    window.removeEventListener('resize', this.listener);\n    this.nodes = [];\n  }\n}\n"]}