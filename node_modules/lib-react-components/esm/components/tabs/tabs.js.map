{"version":3,"sources":["../../../src/components/tabs/tabs.jsx"],"names":["React","PureComponent","Children","isValidElement","cloneElement","PropTypes","classNames","withAnalytics","Tabs","props","handleChange","e","val","value","onChange","valueState","state","length","setValue","defaultValue","nextProps","setState","children","color","colorOn","align","className","other","map","child","index","key","selected","onClick","propTypes","node","isRequired","oneOfType","string","number","func","oneOf","defaultProps"],"mappings":"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","file":"tabs.js","sourcesContent":["import React, { PureComponent, Children, isValidElement, cloneElement } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withAnalytics from '../../containers/analytics_hoc';\n\n/**\n * Tabs component\n */\nclass Tabs extends PureComponent {\n  static propTypes = {\n    /**\n     * The contents of the Tabs\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * The text string to use for the default tab selected\n     */\n    defaultValue: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * Makes Tabs controllable and selects the tab whose value prop matches this prop\n     */\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n    ]),\n    /**\n     * Callback function that is fired when the Tabs selected value changed\n     */\n    onChange: PropTypes.func,\n    /**\n     * Component color from theme\n     */\n    color: PropTypes.string,\n    /**\n     * Component checked color from theme\n     */\n    colorOn: PropTypes.string,\n    /**\n     * Component content aligment\n     */\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    /**\n     * The CSS class name of the root element\n     */\n    className: PropTypes.string,\n  };\n\n  static defaultProps = {\n    defaultValue: '',\n    value: '',\n    onChange() {},\n    color: 'grey',\n    colorOn: 'primary',\n    align: 'center',\n    className: '',\n  };\n\n  constructor(props) {\n    super(props);\n\n    let defaultValue = props.defaultValue;\n\n    if (\n      typeof props.value === 'number'\n      || props.value.length > 0\n    ) {\n      defaultValue = props.value;\n    }\n\n    this.state = {\n      value: defaultValue,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { value } = this.props;\n\n    if (value !== nextProps.value) {\n      this.setState({\n        value: nextProps.value,\n      });\n    }\n  }\n\n  /**\n   * Set value to component state\n   * @param {string} value\n   */\n  setValue(value) {\n    this.setState({\n      value,\n    });\n  }\n\n  /**\n   * Handler for tabs change event\n   * @param {SytheticEvent} e\n   * @param {string} val\n   */\n  handleChange = (e, val) => {\n    const { value, onChange } = this.props;\n    const { value: valueState } = this.state;\n\n    // Use `value` from props for check\n    if (\n      typeof value === 'number'\n      || value.length > 0\n    ) {\n      if (value !== val) {\n        return onChange(e, val);\n      }\n    }\n\n    // Use `value` from state for check\n    if (valueState !== val) {\n      onChange(e, val);\n    }\n\n    return this.setValue(val);\n  };\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n  render() {\n    const {\n      children,\n      defaultValue,\n      value,\n      onChange,\n      color,\n      colorOn,\n      align,\n      className,\n      ...other\n    } = this.props;\n    const { value: valueState } = this.state;\n\n    return (\n      <div\n        data-component=\"tabs\"\n        data-value={valueState}\n        className={classNames(\n          [`text_${align}`],\n          className,\n        )}\n        {...other}\n      >\n        {Children.map(children, (child, index) => {\n          if (!isValidElement(child)) {\n            return null;\n          }\n\n          return cloneElement(child, {\n            key: index,\n            selected: valueState === child.props.value,\n            onClick: this.handleChange,\n            color,\n            colorOn,\n          });\n        })}\n      </div>\n    );\n  }\n}\n\nexport default withAnalytics(Tabs, 'onChange');\n"]}