{"version":3,"sources":["../../../src/components/content_loader/index.jsx"],"names":["React","PureComponent","PropTypes","classNames","uuid","ContentLoader","idClip","idGradient","props","color","duration","className","height","width","children","other","fill","propTypes","string","number","node","isRequired","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA;;;;IAGqBC,a;;;;;;;;;;;;;;oMAoCnBC,M,GAASF,M,QACTG,U,GAAaH,M;;;;;6BAEJ;AAAA,mBASH,KAAKI,KATF;AAAA,UAELC,KAFK,UAELA,KAFK;AAAA,UAGLC,QAHK,UAGLA,QAHK;AAAA,UAILC,SAJK,UAILA,SAJK;AAAA,UAKLC,MALK,UAKLA,MALK;AAAA,UAMLC,KANK,UAMLA,KANK;AAAA,UAOLC,QAPK,UAOLA,QAPK;AAAA,UAQFC,KARE;;AAWP,aACE;AAAA;AAAA;AACE,4BAAe,gBADjB;AAEE,4BAAgBF,KAAhB,SAAyBD,MAF3B;AAGE,qBAAWT,WACT,gBADS,EAETQ,SAFS;AAHb,WAOMI,KAPN;AASE;AACE,iBAAO,EAAEC,gBAAc,KAAKT,UAAnB,MAAF,EADT;AAEE,8BAAkB,KAAKD,MAAvB,MAFF;AAGE,aAAE,GAHJ;AAIE,aAAE,GAJJ;AAKE,iBAAOO,KALT;AAME,kBAAQD;AANV,UATF;AAkBE;AAAA;AAAA;AACE;AAAA;AAAA,cAAU,IAAI,KAAKN,MAAnB;AACGQ;AADH,WADF;AAKE;AAAA;AAAA,cAAgB,IAAI,KAAKP,UAAzB;AACE,0CAAM,QAAO,IAAb,EAAkB,qCAAmCE,KAArD,GADF;AAEE,0CAAM,QAAO,KAAb,EAAmB,qCAAmCA,KAAtD,GAFF;AAGE,0CAAM,QAAO,MAAb,EAAoB,qCAAmCA,KAAvD;AAHF;AALF;AAlBF,OADF;AAgCD;;;;EAlFwCR,a;;AAAtBI,a,CACZY,S,GAAY;AACjB;;;AAGAR,SAAOP,UAAUgB,MAJA;AAKjB;;;AAGAR,YAAUR,UAAUiB,MARH;AASjB;;;AAGAR,aAAWT,UAAUgB,MAZJ;AAajB;;;AAGAN,UAAQV,UAAUiB,MAhBD;AAiBjB;;;AAGAN,SAAOX,UAAUiB,MApBA;AAqBjB;;;AAGAL,YAAUZ,UAAUkB,IAAV,CAAeC;AAxBR,C;AADAhB,a,CA4BZiB,Y,GAAe;AACpBb,SAAO,MADa;AAEpBC,YAAU,CAFU;AAGpBC,aAAW,EAHS;AAIpBC,UAAQ,GAJY;AAKpBC,SAAO;AALa,C;eA5BHR,a","file":"index.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport uuid from '../../utils/uuid';\n\n/**\n * ContentLoader component\n */\nexport default class ContentLoader extends PureComponent {\n  static propTypes = {\n    /**\n     * Color from theme\n     */\n    color: PropTypes.string,\n    /**\n     * Animation duration\n     */\n    duration: PropTypes.number,\n    /**\n     * The CSS class name of the root element\n     */\n    className: PropTypes.string,\n    /**\n     * Height of component in px\n     */\n    height: PropTypes.number,\n    /**\n     * Width of component in px\n     */\n    width: PropTypes.number,\n    /**\n     * The content of the component\n     */\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    color: 'grey',\n    duration: 2,\n    className: '',\n    height: 300,\n    width: 300,\n  };\n\n  idClip = uuid();\n  idGradient = uuid();\n\n  render() {\n    const {\n      color,\n      duration,\n      className,\n      height,\n      width,\n      children,\n      ...other\n    } = this.props;\n\n    return (\n      <svg\n        data-component=\"content-loader\"\n        viewBox={`0 0 ${width} ${height}`}\n        className={classNames(\n          'content_loader',\n          className,\n        )}\n        {...other}\n      >\n        <rect\n          style={{ fill: `url(#${this.idGradient})` }}\n          clipPath={`url(#${this.idClip})`}\n          x=\"0\"\n          y=\"0\"\n          width={width}\n          height={height}\n        />\n\n        <defs>\n          <clipPath id={this.idClip}>\n            {children}\n          </clipPath>\n\n          <linearGradient id={this.idGradient}>\n            <stop offset=\"0%\" className={`content_loader_color_${color}`} />\n            <stop offset=\"50%\" className={`content_loader_color_${color}`} />\n            <stop offset=\"100%\" className={`content_loader_color_${color}`} />\n          </linearGradient>\n        </defs>\n      </svg>\n    );\n  }\n}\n"]}