{"version":3,"sources":["../../../src/components/box/index.jsx"],"names":["React","PropTypes","getOpacity","value","getBorderWidth","type","width","top","right","bottom","left","join","Box","props","tagType","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","strokeStyle","strokeType","style","other","newStyle","backgroundColor","undefined","borderColor","borderWidth","borderStyle","Component","propTypes","children","node","string","number","oneOf","className","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction getOpacity(value) {\n  if (typeof value === 'number') {\n    if (value > 1) {\n      return 1;\n    }\n\n    if (value < 0) {\n      return 0;\n    }\n\n    return value;\n  }\n\n  return 1;\n}\n\nfunction getBorderWidth(type, width) {\n  if (!type) {\n    return width;\n  }\n\n  let top = 0;\n  let right = 0;\n  let bottom = 0;\n  let left = 0;\n\n  if (type === 'horizontal' || type === 'top') {\n    top = width;\n  }\n\n  if (type === 'horizontal' || type === 'bottom') {\n    bottom = width;\n  }\n\n  if (type === 'vertical' || type === 'left') {\n    left = width;\n  }\n\n  if (type === 'vertical' || type === 'right') {\n    right = width;\n  }\n\n  return [top, right, bottom, left, ''].join('px ');\n}\n\n/**\n * Box component\n */\nexport default function Box(props) {\n  const {\n    tagType,\n    fill,\n    fillOpacity,\n    stroke,\n    strokeWidth,\n    strokeOpacity,\n    strokeStyle,\n    strokeType,\n    style, // eslint-disable-line\n    ...other\n  } = props;\n\n  const newStyle = {\n    ...style,\n    backgroundColor: fill\n      ? `rgba(var(--${fill}), ${getOpacity(fillOpacity)})`\n      : undefined,\n    borderColor: stroke\n      ? `rgba(var(--${stroke}), ${getOpacity(strokeOpacity)})`\n      : undefined,\n    borderWidth: stroke\n      ? getBorderWidth(strokeType, strokeWidth)\n      : undefined,\n    borderStyle: stroke\n      ? strokeStyle\n      : undefined,\n  };\n\n  const Component = tagType;\n\n  return (\n    <Component\n      {...other}\n      style={newStyle}\n    />\n  );\n}\n\nBox.propTypes = {\n  /**\n   * This is what will be displayed inside the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element.\n   */\n  tagType: PropTypes.string,\n  /**\n   * Component background-color from theme.\n   */\n  fill: PropTypes.string,\n  /**\n   * Component background-color opacity.\n   */\n  fillOpacity: PropTypes.number,\n  /**\n   * Component border-color from theme.\n   */\n  stroke: PropTypes.string,\n  /**\n   * Component border width.\n   */\n  strokeWidth: PropTypes.number,\n  /**\n   * Component border-color opacity.\n   */\n  strokeOpacity: PropTypes.number,\n  /**\n   * Component border style.\n   */\n  strokeStyle: PropTypes.oneOf(['solid', 'dashed', 'dotted', 'none']),\n  /**\n   * Component border position.\n   */\n  strokeType: PropTypes.oneOf(['horizontal', 'vertical', 'top', 'right', 'bottom', 'left']),\n  /**\n   * The CSS class name of the root element.\n   */\n  className: PropTypes.string,\n};\n\nBox.defaultProps = {\n  children: null,\n  tagType: 'div',\n  fill: undefined,\n  fillOpacity: undefined,\n  stroke: undefined,\n  strokeStyle: 'solid',\n  strokeWidth: 1,\n  strokeOpacity: undefined,\n  strokeType: undefined,\n  className: undefined,\n};\n"]}