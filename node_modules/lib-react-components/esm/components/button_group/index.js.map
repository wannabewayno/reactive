{"version":3,"sources":["../../../src/components/button_group/index.jsx"],"names":["React","PropTypes","classnames","ButtonGroup","props","className","children","bgType","color","textColor","size","disabled","full","other","button_group_full","Children","map","child","isValidElement","cloneElement","propTypes","oneOf","string","bool","node","isRequired","defaultProps","undefined"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA;;;AAGA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA,MAEvCC,SAFuC,GAWrCD,KAXqC,CAEvCC,SAFuC;AAAA,MAGvCC,QAHuC,GAWrCF,KAXqC,CAGvCE,QAHuC;AAAA,MAIvCC,MAJuC,GAWrCH,KAXqC,CAIvCG,MAJuC;AAAA,MAKvCC,KALuC,GAWrCJ,KAXqC,CAKvCI,KALuC;AAAA,MAMvCC,SANuC,GAWrCL,KAXqC,CAMvCK,SANuC;AAAA,MAOvCC,IAPuC,GAWrCN,KAXqC,CAOvCM,IAPuC;AAAA,MAQvCC,QARuC,GAWrCP,KAXqC,CAQvCO,QARuC;AAAA,MASvCC,IATuC,GAWrCR,KAXqC,CASvCQ,IATuC;AAAA,MAUpCC,KAVoC,4BAWrCT,KAXqC;;AAazC,SACE;AAAA;AAAA,iBACMS,KADN;AAEE,wBAAe,cAFjB;AAGE,iBAAWX,WACT,cADS,EAET;AACEY,2BAAmBF;AADrB,OAFS,EAKTP,SALS;AAHb;AAWGL,UAAMe,QAAN,CAAeC,GAAf,CAAmBV,QAAnB,EAA6B,UAACW,KAAD,EAAW;AACvC,UAAI,CAACjB,MAAMkB,cAAN,CAAqBD,KAArB,CAAL,EAAkC;AAChC,eAAO,IAAP;AACD;;AAED,aAAOjB,MAAMmB,YAAN,CAAmBF,KAAnB,EAA0B;AAC/BN,kBAAUM,MAAMb,KAAN,CAAYO,QAAZ,IAAwBA,QADH;AAE/BF,mBAAWQ,MAAMb,KAAN,CAAYK,SAAZ,IAAyBA,SAFL;AAG/BF,sBAH+B;AAI/BC,oBAJ+B;AAK/BE,kBAL+B;AAM/BE;AAN+B,OAA1B,CAAP;AAQD,KAbA;AAXH,GADF;AA4BD;;AAEDT,YAAYiB,SAAZ,GAAwB;AACtB;;;;;;AAMAb,UAAQN,UAAUoB,KAAV,CAAgB,CAAC,MAAD,EAAS,QAAT,EAAmB,OAAnB,CAAhB,CAPc;AAQtB;;;AAGAb,SAAOP,UAAUqB,MAXK;AAYtB;;;AAGAb,aAAWR,UAAUqB,MAfC;AAgBtB;;;AAGAZ,QAAMT,UAAUoB,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAhB,CAnBgB;AAoBtB;;;AAGAV,YAAUV,UAAUsB,IAvBE;AAwBtB;;;AAGAjB,YAAUL,UAAUuB,IAAV,CAAeC,UA3BH;AA4BtB;;;AAGApB,aAAWJ,UAAUqB,MA/BC;AAgCtB;;;AAGAV,QAAMX,UAAUsB;AAnCM,CAAxB;;AAsCApB,YAAYuB,YAAZ,GAA2B;AACzBrB,aAAWsB,SADc;AAEzBpB,UAAQ,MAFiB;AAGzBC,SAAO,SAHkB;AAIzBC,aAAW,OAJc;AAKzBC,QAAM,QALmB;AAMzBC,YAAU,KANe;AAOzBC,QAAM;AAPmB,CAA3B","file":"index.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n/**\n * ButtonGroup component\n */\nexport default function ButtonGroup(props) {\n  const {\n    className,\n    children,\n    bgType,\n    color,\n    textColor,\n    size,\n    disabled,\n    full,\n    ...other\n  } = props;\n\n  return (\n    <div\n      {...other}\n      data-component=\"button_group\"\n      className={classnames(\n        'button_group',\n        {\n          button_group_full: full,\n        },\n        className,\n      )}\n    >\n      {React.Children.map(children, (child) => {\n        if (!React.isValidElement(child)) {\n          return null;\n        }\n\n        return React.cloneElement(child, {\n          disabled: child.props.disabled || disabled,\n          textColor: child.props.textColor || textColor,\n          bgType,\n          color,\n          size,\n          full,\n        });\n      })}\n    </div>\n  );\n}\n\nButtonGroup.propTypes = {\n  /**\n   * Component type one of `fill` or `stroke`.\n   * If `fill` - component will have background and border from `color` props.\n   * If `stroke` - component will have border from `color` props and transparent background.\n   * If `clear` - component will have transparent border and transparent background.\n   */\n  bgType: PropTypes.oneOf(['fill', 'stroke', 'clear']),\n  /**\n   * Button component color from theme\n   */\n  color: PropTypes.string,\n  /**\n   * Button component text color from theme\n   */\n  textColor: PropTypes.string,\n  /**\n   * Button component size\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n  /**\n   * Disables the buttons if set to true\n   */\n  disabled: PropTypes.bool,\n  /**\n   * This is what will be displayed inside the root element.\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * The CSS class name of the root element.\n   */\n  className: PropTypes.string,\n  /**\n   * Component full-width.\n   */\n  full: PropTypes.bool,\n};\n\nButtonGroup.defaultProps = {\n  className: undefined,\n  bgType: 'fill',\n  color: 'primary',\n  textColor: 'white',\n  size: 'medium',\n  disabled: false,\n  full: false,\n};\n"]}