{"version":3,"sources":["../../../src/containers/segue_handler/index.jsx"],"names":["React","cloneElement","Fragment","PropTypes","SegueHandler","props","children","value","defaultValue","other","length","i","component","name","notExtendProps","console","error","propTypes","node","isRequired","oneOfType","string","number","defaultProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,EAA8BC,QAA9B,QAA8C,OAA9C,C,CAAuD;AACvD,OAAOC,SAAP,MAAsB,YAAtB;;AAEA;;;AAGA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA,MAExCC,QAFwC,GAMtCD,KANsC,CAExCC,QAFwC;AAAA,MAGxCC,KAHwC,GAMtCF,KANsC,CAGxCE,KAHwC;AAAA,MAIxCC,YAJwC,GAMtCH,KANsC,CAIxCG,YAJwC;AAAA,MAKrCC,KALqC,4BAMtCJ,KANsC;;AAQ1C,MAAIC,SAASI,MAAT,KAAoBH,SAASC,YAA7B,CAAJ,EAAgD;AAC9C,SAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIL,SAASI,MAA7B,EAAqCC,KAAK,CAA1C,EAA6C;AAC3C,UAAMC,YAAYN,SAASK,CAAT,CAAlB;AAD2C,6BAEVC,UAAUP,KAFA;AAAA,UAEnCQ,IAFmC,oBAEnCA,IAFmC;AAAA,UAE7BC,cAF6B,oBAE7BA,cAF6B;;;AAI3C,UACG,CAACP,KAAD,IAAUM,SAASL,YAApB,IACCD,SAASM,SAASN,KAFrB,EAGE;AACA,eAAON,aACLW,SADK,EAELE,iBAAiB,EAAjB,gBAA2BL,KAA3B,CAFK,CAAP;AAID;AACF;;AAEDM,YAAQC,KAAR,CAAc,sEAAd;AACD;;AAED,SAAO,oBAAC,QAAD,OAAP;AACD;;AAEDZ,aAAaa,SAAb,GAAyB;AACvB;;;AAGAX,YAAUH,UAAUe,IAAV,CAAeC,UAJF;AAKvB;;;AAGAZ,SAAOJ,UAAUiB,SAAV,CAAoB,CACzBjB,UAAUkB,MADe,EAEzBlB,UAAUmB,MAFe,CAApB,CARgB;AAYvB;;;AAGAd,gBAAcL,UAAUiB,SAAV,CAAoB,CAChCjB,UAAUkB,MADsB,EAEhClB,UAAUmB,MAFsB,CAApB;AAfS,CAAzB;;AAqBAlB,aAAamB,YAAb,GAA4B;AAC1BhB,SAAO,EADmB;AAE1BC,gBAAc;AAFY,CAA5B","file":"index.js","sourcesContent":["import React, { cloneElement, Fragment } from 'react'; // eslint-disable-line\nimport PropTypes from 'prop-types';\n\n/**\n * SegueHandler component\n */\nexport default function SegueHandler(props) {\n  const {\n    children,\n    value,\n    defaultValue,\n    ...other\n  } = props;\n\n  if (children.length && (value || defaultValue)) {\n    for (let i = 0; i < children.length; i += 1) {\n      const component = children[i];\n      const { name, notExtendProps } = component.props;\n\n      if (\n        (!value && name === defaultValue) ||\n        (value && name === value)\n      ) {\n        return cloneElement(\n          component,\n          notExtendProps ? {} : { ...other },\n        );\n      }\n    }\n\n    console.error('\\'defaultValue\\' or \\'value\\' prop of the <SegueHandler /> is wrong!');\n  }\n\n  return <Fragment />;\n}\n\nSegueHandler.propTypes = {\n  /**\n   * The content of the SegueHandler. This is usually used to pass SegueHandler elements\n   */\n  children: PropTypes.node.isRequired,\n  /**\n   * Makes SegueHandler controllable and show the child whose value prop matches this prop\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n  /**\n   * The text string to use for the default child show\n   */\n  defaultValue: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n  ]),\n};\n\nSegueHandler.defaultProps = {\n  value: '',\n  defaultValue: '',\n};\n"]}