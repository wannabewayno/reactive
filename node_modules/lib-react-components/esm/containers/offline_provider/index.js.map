{"version":3,"sources":["../../../src/containers/offline_provider/index.jsx"],"names":["Component","PropTypes","OfflineProvider","state","online","navigator","onLine","bindedOnChange","onChange","bind","window","addEventListener","removeEventListener","setState","props","children","propTypes","node","childContextTypes","bool","defaultProps"],"mappings":";;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA;;;;IAGqBC,e;;;;;;;;;;;;;;wMAgBnBC,K,GAAQ;AACNC,cAAQC,UAAUC;AADZ,K,QA8BRC,c,GAAiB,MAAKC,QAAL,CAAcC,IAAd,O;;;;;sCA1BC;AAChB,aAAO;AACLL,gBAAQ,KAAKD,KAAL,CAAWC;AADd,OAAP;AAGD;;;wCAEmB;AAClBM,aAAOC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKJ,cAAvC;AACAG,aAAOC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKJ,cAAxC;AACD;;;2CAEsB;AACrBG,aAAOE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKL,cAA1C;AACAG,aAAOE,mBAAP,CAA2B,SAA3B,EAAsC,KAAKL,cAA3C;AACD;;AAED;;;;;;+BAIW;AACT,WAAKM,QAAL,CAAc;AACZT,gBAAQC,UAAUC;AADN,OAAd;AAGD;;;;;AAID;;;;;6BAKS;AACP,aAAO,KAAKQ,KAAL,CAAWC,QAAlB;AACD;;;;EAvD0Cf,S;;AAAxBE,e,CACZc,S,GAAY;AACjB;;;AAGAD,YAAUd,UAAUgB;AAJH,C;AADAf,e,CAQZgB,iB,GAAoB;AACzBd,UAAQH,UAAUkB;AADO,C;AARRjB,e,CAYZkB,Y,GAAe;AACpBL,YAAU;AADU,C;eAZHb,e","file":"index.js","sourcesContent":["import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * OfflineProvider component\n */\nexport default class OfflineProvider extends Component {\n  static propTypes = {\n    /**\n     * This is what will be displayed inside the OfflineProvider\n     */\n    children: PropTypes.node,\n  }\n\n  static childContextTypes = {\n    online: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    children: null,\n  }\n\n  state = {\n    online: navigator.onLine,\n  };\n\n  getChildContext() {\n    return {\n      online: this.state.online,\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('online', this.bindedOnChange);\n    window.addEventListener('offline', this.bindedOnChange);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('online', this.bindedOnChange);\n    window.removeEventListener('offline', this.bindedOnChange);\n  }\n\n  /**\n   * onChange connection handler\n   */\n\n  onChange() {\n    this.setState({\n      online: navigator.onLine,\n    });\n  }\n\n  bindedOnChange = this.onChange.bind(this);\n\n  /**\n   * render\n   * @return {ReactElement} markup\n   */\n\n  render() {\n    return this.props.children;\n  }\n}\n"]}